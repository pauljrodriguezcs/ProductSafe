
ScaleTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000f1e  00000fb2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f1e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000234  00800102  00800102  00000fb4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000fb4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fe4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000278  00000000  00000000  00001024  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002f73  00000000  00000000  0000129c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000113b  00000000  00000000  0000420f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a1c  00000000  00000000  0000534a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000067c  00000000  00000000  00006d68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f1a  00000000  00000000  000073e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001ec3  00000000  00000000  000082fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000280  00000000  00000000  0000a1c1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	35 c1       	rjmp	.+618    	; 0x26c <__ctors_end>
   2:	00 00       	nop
   4:	50 c1       	rjmp	.+672    	; 0x2a6 <__bad_interrupt>
   6:	00 00       	nop
   8:	4e c1       	rjmp	.+668    	; 0x2a6 <__bad_interrupt>
   a:	00 00       	nop
   c:	4c c1       	rjmp	.+664    	; 0x2a6 <__bad_interrupt>
   e:	00 00       	nop
  10:	4a c1       	rjmp	.+660    	; 0x2a6 <__bad_interrupt>
  12:	00 00       	nop
  14:	48 c1       	rjmp	.+656    	; 0x2a6 <__bad_interrupt>
  16:	00 00       	nop
  18:	46 c1       	rjmp	.+652    	; 0x2a6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	44 c1       	rjmp	.+648    	; 0x2a6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	42 c1       	rjmp	.+644    	; 0x2a6 <__bad_interrupt>
  22:	00 00       	nop
  24:	40 c1       	rjmp	.+640    	; 0x2a6 <__bad_interrupt>
  26:	00 00       	nop
  28:	3e c1       	rjmp	.+636    	; 0x2a6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3c c1       	rjmp	.+632    	; 0x2a6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	3a c1       	rjmp	.+628    	; 0x2a6 <__bad_interrupt>
  32:	00 00       	nop
  34:	6d c4       	rjmp	.+2266   	; 0x910 <__vector_13>
  36:	00 00       	nop
  38:	36 c1       	rjmp	.+620    	; 0x2a6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	34 c1       	rjmp	.+616    	; 0x2a6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	32 c1       	rjmp	.+612    	; 0x2a6 <__bad_interrupt>
  42:	00 00       	nop
  44:	30 c1       	rjmp	.+608    	; 0x2a6 <__bad_interrupt>
  46:	00 00       	nop
  48:	2e c1       	rjmp	.+604    	; 0x2a6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2c c1       	rjmp	.+600    	; 0x2a6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	2a c1       	rjmp	.+596    	; 0x2a6 <__bad_interrupt>
  52:	00 00       	nop
  54:	28 c1       	rjmp	.+592    	; 0x2a6 <__bad_interrupt>
  56:	00 00       	nop
  58:	26 c1       	rjmp	.+588    	; 0x2a6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	24 c1       	rjmp	.+584    	; 0x2a6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	22 c1       	rjmp	.+580    	; 0x2a6 <__bad_interrupt>
  62:	00 00       	nop
  64:	20 c1       	rjmp	.+576    	; 0x2a6 <__bad_interrupt>
  66:	00 00       	nop
  68:	1e c1       	rjmp	.+572    	; 0x2a6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1c c1       	rjmp	.+568    	; 0x2a6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	1a c1       	rjmp	.+564    	; 0x2a6 <__bad_interrupt>
  72:	00 00       	nop
  74:	18 c1       	rjmp	.+560    	; 0x2a6 <__bad_interrupt>
  76:	00 00       	nop
  78:	16 c1       	rjmp	.+556    	; 0x2a6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	14 c1       	rjmp	.+552    	; 0x2a6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	12 c1       	rjmp	.+548    	; 0x2a6 <__bad_interrupt>
  82:	00 00       	nop
  84:	10 c1       	rjmp	.+544    	; 0x2a6 <__bad_interrupt>
  86:	00 00       	nop
  88:	0e c1       	rjmp	.+540    	; 0x2a6 <__bad_interrupt>
	...

0000008c <CHARSET>:
  8c:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
  9c:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
  ac:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
  bc:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
  cc:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
  dc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
  ec:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
  fc:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
 10c:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
 11c:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
 12c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
 13c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
 14c:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
 15c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
 16c:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 17c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
 18c:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
 19c:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
 1ac:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
 1bc:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
 1cc:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
 1dc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
 1ec:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
 1fc:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
 20c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
 21c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
 22c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
 23c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
 24c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
 25c:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

0000026c <__ctors_end>:
 26c:	11 24       	eor	r1, r1
 26e:	1f be       	out	0x3f, r1	; 63
 270:	cf ef       	ldi	r28, 0xFF	; 255
 272:	d0 e4       	ldi	r29, 0x40	; 64
 274:	de bf       	out	0x3e, r29	; 62
 276:	cd bf       	out	0x3d, r28	; 61

00000278 <__do_copy_data>:
 278:	11 e0       	ldi	r17, 0x01	; 1
 27a:	a0 e0       	ldi	r26, 0x00	; 0
 27c:	b1 e0       	ldi	r27, 0x01	; 1
 27e:	ee e1       	ldi	r30, 0x1E	; 30
 280:	ff e0       	ldi	r31, 0x0F	; 15
 282:	00 e0       	ldi	r16, 0x00	; 0
 284:	0b bf       	out	0x3b, r16	; 59
 286:	02 c0       	rjmp	.+4      	; 0x28c <__do_copy_data+0x14>
 288:	07 90       	elpm	r0, Z+
 28a:	0d 92       	st	X+, r0
 28c:	a2 30       	cpi	r26, 0x02	; 2
 28e:	b1 07       	cpc	r27, r17
 290:	d9 f7       	brne	.-10     	; 0x288 <__do_copy_data+0x10>

00000292 <__do_clear_bss>:
 292:	23 e0       	ldi	r18, 0x03	; 3
 294:	a2 e0       	ldi	r26, 0x02	; 2
 296:	b1 e0       	ldi	r27, 0x01	; 1
 298:	01 c0       	rjmp	.+2      	; 0x29c <.do_clear_bss_start>

0000029a <.do_clear_bss_loop>:
 29a:	1d 92       	st	X+, r1

0000029c <.do_clear_bss_start>:
 29c:	a6 33       	cpi	r26, 0x36	; 54
 29e:	b2 07       	cpc	r27, r18
 2a0:	e1 f7       	brne	.-8      	; 0x29a <.do_clear_bss_loop>
 2a2:	78 d1       	rcall	.+752    	; 0x594 <main>
 2a4:	3a c6       	rjmp	.+3188   	; 0xf1a <_exit>

000002a6 <__bad_interrupt>:
 2a6:	ac ce       	rjmp	.-680    	; 0x0 <__vectors>

000002a8 <HX711_1_is_ready>:
}

float HX711_1_get_scale(void)
{
	return SCALE_1;
}
 2a8:	80 b1       	in	r24, 0x00	; 0
 2aa:	86 95       	lsr	r24
 2ac:	86 95       	lsr	r24
 2ae:	91 e0       	ldi	r25, 0x01	; 1
 2b0:	89 27       	eor	r24, r25
 2b2:	81 70       	andi	r24, 0x01	; 1
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	08 95       	ret

000002b8 <HX711_1_read>:
 2b8:	f7 df       	rcall	.-18     	; 0x2a8 <HX711_1_is_ready>
 2ba:	89 2b       	or	r24, r25
 2bc:	e9 f3       	breq	.-6      	; 0x2b8 <HX711_1_read>
 2be:	02 99       	sbic	0x00, 2	; 0
 2c0:	fe cf       	rjmp	.-4      	; 0x2be <HX711_1_read+0x6>
 2c2:	28 e1       	ldi	r18, 0x18	; 24
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	dc 01       	movw	r26, r24
 2ca:	13 9a       	sbi	0x02, 3	; 2
 2cc:	00 00       	nop
 2ce:	88 0f       	add	r24, r24
 2d0:	99 1f       	adc	r25, r25
 2d2:	aa 1f       	adc	r26, r26
 2d4:	bb 1f       	adc	r27, r27
 2d6:	13 98       	cbi	0x02, 3	; 2
 2d8:	00 00       	nop
 2da:	02 9b       	sbis	0x00, 2	; 0
 2dc:	03 c0       	rjmp	.+6      	; 0x2e4 <HX711_1_read+0x2c>
 2de:	01 96       	adiw	r24, 0x01	; 1
 2e0:	a1 1d       	adc	r26, r1
 2e2:	b1 1d       	adc	r27, r1
 2e4:	21 50       	subi	r18, 0x01	; 1
 2e6:	89 f7       	brne	.-30     	; 0x2ca <HX711_1_read+0x12>
 2e8:	20 91 31 03 	lds	r18, 0x0331	; 0x800331 <GAIN_1>
 2ec:	22 23       	and	r18, r18
 2ee:	51 f0       	breq	.+20     	; 0x304 <HX711_1_read+0x4c>
 2f0:	20 e0       	ldi	r18, 0x00	; 0
 2f2:	13 9a       	sbi	0x02, 3	; 2
 2f4:	00 00       	nop
 2f6:	13 98       	cbi	0x02, 3	; 2
 2f8:	00 00       	nop
 2fa:	2f 5f       	subi	r18, 0xFF	; 255
 2fc:	30 91 31 03 	lds	r19, 0x0331	; 0x800331 <GAIN_1>
 300:	23 17       	cp	r18, r19
 302:	b8 f3       	brcs	.-18     	; 0x2f2 <HX711_1_read+0x3a>
 304:	bc 01       	movw	r22, r24
 306:	cd 01       	movw	r24, r26
 308:	80 58       	subi	r24, 0x80	; 128
 30a:	08 95       	ret

0000030c <HX711_1_set_gain>:
 30c:	80 34       	cpi	r24, 0x40	; 64
 30e:	49 f0       	breq	.+18     	; 0x322 <HX711_1_set_gain+0x16>
 310:	80 38       	cpi	r24, 0x80	; 128
 312:	19 f0       	breq	.+6      	; 0x31a <HX711_1_set_gain+0xe>
 314:	80 32       	cpi	r24, 0x20	; 32
 316:	61 f4       	brne	.+24     	; 0x330 <HX711_1_set_gain+0x24>
 318:	08 c0       	rjmp	.+16     	; 0x32a <HX711_1_set_gain+0x1e>
 31a:	81 e0       	ldi	r24, 0x01	; 1
 31c:	80 93 31 03 	sts	0x0331, r24	; 0x800331 <GAIN_1>
 320:	07 c0       	rjmp	.+14     	; 0x330 <HX711_1_set_gain+0x24>
 322:	83 e0       	ldi	r24, 0x03	; 3
 324:	80 93 31 03 	sts	0x0331, r24	; 0x800331 <GAIN_1>
 328:	03 c0       	rjmp	.+6      	; 0x330 <HX711_1_set_gain+0x24>
 32a:	82 e0       	ldi	r24, 0x02	; 2
 32c:	80 93 31 03 	sts	0x0331, r24	; 0x800331 <GAIN_1>
 330:	13 98       	cbi	0x02, 3	; 2
 332:	c2 cf       	rjmp	.-124    	; 0x2b8 <HX711_1_read>
 334:	08 95       	ret

00000336 <HX711_1_init>:
 336:	0b 9a       	sbi	0x01, 3	; 1
 338:	0a 98       	cbi	0x01, 2	; 1
 33a:	12 9a       	sbi	0x02, 2	; 2
 33c:	e7 cf       	rjmp	.-50     	; 0x30c <HX711_1_set_gain>
 33e:	08 95       	ret

00000340 <HX711_1_read_average>:
 340:	cf 92       	push	r12
 342:	df 92       	push	r13
 344:	ef 92       	push	r14
 346:	ff 92       	push	r15
 348:	cf 93       	push	r28
 34a:	df 93       	push	r29
 34c:	d8 2f       	mov	r29, r24
 34e:	88 23       	and	r24, r24
 350:	69 f0       	breq	.+26     	; 0x36c <HX711_1_read_average+0x2c>
 352:	c0 e0       	ldi	r28, 0x00	; 0
 354:	c1 2c       	mov	r12, r1
 356:	d1 2c       	mov	r13, r1
 358:	76 01       	movw	r14, r12
 35a:	ae df       	rcall	.-164    	; 0x2b8 <HX711_1_read>
 35c:	c6 0e       	add	r12, r22
 35e:	d7 1e       	adc	r13, r23
 360:	e8 1e       	adc	r14, r24
 362:	f9 1e       	adc	r15, r25
 364:	cf 5f       	subi	r28, 0xFF	; 255
 366:	dc 13       	cpse	r29, r28
 368:	f8 cf       	rjmp	.-16     	; 0x35a <HX711_1_read_average+0x1a>
 36a:	03 c0       	rjmp	.+6      	; 0x372 <HX711_1_read_average+0x32>
 36c:	c1 2c       	mov	r12, r1
 36e:	d1 2c       	mov	r13, r1
 370:	76 01       	movw	r14, r12
 372:	2d 2f       	mov	r18, r29
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	40 e0       	ldi	r20, 0x00	; 0
 378:	50 e0       	ldi	r21, 0x00	; 0
 37a:	c7 01       	movw	r24, r14
 37c:	b6 01       	movw	r22, r12
 37e:	8f d5       	rcall	.+2846   	; 0xe9e <__udivmodsi4>
 380:	ca 01       	movw	r24, r20
 382:	b9 01       	movw	r22, r18
 384:	df 91       	pop	r29
 386:	cf 91       	pop	r28
 388:	ff 90       	pop	r15
 38a:	ef 90       	pop	r14
 38c:	df 90       	pop	r13
 38e:	cf 90       	pop	r12
 390:	08 95       	ret

00000392 <HX711_1_get_value>:
 392:	d6 df       	rcall	.-84     	; 0x340 <HX711_1_read_average>
 394:	ea d4       	rcall	.+2516   	; 0xd6a <__floatunsisf>
 396:	20 91 2d 03 	lds	r18, 0x032D	; 0x80032d <OFFSET_1>
 39a:	30 91 2e 03 	lds	r19, 0x032E	; 0x80032e <OFFSET_1+0x1>
 39e:	40 91 2f 03 	lds	r20, 0x032F	; 0x80032f <OFFSET_1+0x2>
 3a2:	50 91 30 03 	lds	r21, 0x0330	; 0x800330 <OFFSET_1+0x3>
 3a6:	e3 c3       	rjmp	.+1990   	; 0xb6e <__subsf3>
 3a8:	08 95       	ret

000003aa <HX711_1_get_units>:
 3aa:	f3 df       	rcall	.-26     	; 0x392 <HX711_1_get_value>
 3ac:	20 91 32 03 	lds	r18, 0x0332	; 0x800332 <SCALE_1>
 3b0:	30 91 33 03 	lds	r19, 0x0333	; 0x800333 <SCALE_1+0x1>
 3b4:	40 91 34 03 	lds	r20, 0x0334	; 0x800334 <SCALE_1+0x2>
 3b8:	50 91 35 03 	lds	r21, 0x0335	; 0x800335 <SCALE_1+0x3>
 3bc:	3d c4       	rjmp	.+2170   	; 0xc38 <__divsf3>
 3be:	08 95       	ret

000003c0 <HX711_1_set_scale>:
 3c0:	60 93 32 03 	sts	0x0332, r22	; 0x800332 <SCALE_1>
 3c4:	70 93 33 03 	sts	0x0333, r23	; 0x800333 <SCALE_1+0x1>
 3c8:	80 93 34 03 	sts	0x0334, r24	; 0x800334 <SCALE_1+0x2>
 3cc:	90 93 35 03 	sts	0x0335, r25	; 0x800335 <SCALE_1+0x3>
 3d0:	08 95       	ret

000003d2 <HX711_1_set_offset>:

void HX711_1_set_offset(double offset)
{
    OFFSET_1 = offset;
 3d2:	60 93 2d 03 	sts	0x032D, r22	; 0x80032d <OFFSET_1>
 3d6:	70 93 2e 03 	sts	0x032E, r23	; 0x80032e <OFFSET_1+0x1>
 3da:	80 93 2f 03 	sts	0x032F, r24	; 0x80032f <OFFSET_1+0x2>
 3de:	90 93 30 03 	sts	0x0330, r25	; 0x800330 <OFFSET_1+0x3>
 3e2:	08 95       	ret

000003e4 <vListInsertEnd>:
	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
}
 3e4:	cf 93       	push	r28
 3e6:	df 93       	push	r29
 3e8:	fc 01       	movw	r30, r24
 3ea:	db 01       	movw	r26, r22
 3ec:	21 81       	ldd	r18, Z+1	; 0x01
 3ee:	32 81       	ldd	r19, Z+2	; 0x02
 3f0:	e9 01       	movw	r28, r18
 3f2:	8a 81       	ldd	r24, Y+2	; 0x02
 3f4:	9b 81       	ldd	r25, Y+3	; 0x03
 3f6:	13 96       	adiw	r26, 0x03	; 3
 3f8:	9c 93       	st	X, r25
 3fa:	8e 93       	st	-X, r24
 3fc:	12 97       	sbiw	r26, 0x02	; 2
 3fe:	81 81       	ldd	r24, Z+1	; 0x01
 400:	92 81       	ldd	r25, Z+2	; 0x02
 402:	15 96       	adiw	r26, 0x05	; 5
 404:	9c 93       	st	X, r25
 406:	8e 93       	st	-X, r24
 408:	14 97       	sbiw	r26, 0x04	; 4
 40a:	8a 81       	ldd	r24, Y+2	; 0x02
 40c:	9b 81       	ldd	r25, Y+3	; 0x03
 40e:	ec 01       	movw	r28, r24
 410:	7d 83       	std	Y+5, r23	; 0x05
 412:	6c 83       	std	Y+4, r22	; 0x04
 414:	e9 01       	movw	r28, r18
 416:	7b 83       	std	Y+3, r23	; 0x03
 418:	6a 83       	std	Y+2, r22	; 0x02
 41a:	72 83       	std	Z+2, r23	; 0x02
 41c:	61 83       	std	Z+1, r22	; 0x01
 41e:	19 96       	adiw	r26, 0x09	; 9
 420:	fc 93       	st	X, r31
 422:	ee 93       	st	-X, r30
 424:	18 97       	sbiw	r26, 0x08	; 8
 426:	80 81       	ld	r24, Z
 428:	8f 5f       	subi	r24, 0xFF	; 255
 42a:	80 83       	st	Z, r24
 42c:	df 91       	pop	r29
 42e:	cf 91       	pop	r28
 430:	08 95       	ret

00000432 <vListRemove>:
/*-----------------------------------------------------------*/

void vListRemove( xListItem *pxItemToRemove )
{
 432:	fc 01       	movw	r30, r24
xList * pxList;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 434:	a2 81       	ldd	r26, Z+2	; 0x02
 436:	b3 81       	ldd	r27, Z+3	; 0x03
 438:	84 81       	ldd	r24, Z+4	; 0x04
 43a:	95 81       	ldd	r25, Z+5	; 0x05
 43c:	15 96       	adiw	r26, 0x05	; 5
 43e:	9c 93       	st	X, r25
 440:	8e 93       	st	-X, r24
 442:	14 97       	sbiw	r26, 0x04	; 4
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 444:	a4 81       	ldd	r26, Z+4	; 0x04
 446:	b5 81       	ldd	r27, Z+5	; 0x05
 448:	82 81       	ldd	r24, Z+2	; 0x02
 44a:	93 81       	ldd	r25, Z+3	; 0x03
 44c:	13 96       	adiw	r26, 0x03	; 3
 44e:	9c 93       	st	X, r25
 450:	8e 93       	st	-X, r24
 452:	12 97       	sbiw	r26, 0x02	; 2
	
	/* The list item knows which list it is in.  Obtain the list from the list
	item. */
	pxList = ( xList * ) pxItemToRemove->pvContainer;
 454:	a0 85       	ldd	r26, Z+8	; 0x08
 456:	b1 85       	ldd	r27, Z+9	; 0x09

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 458:	11 96       	adiw	r26, 0x01	; 1
 45a:	8d 91       	ld	r24, X+
 45c:	9c 91       	ld	r25, X
 45e:	12 97       	sbiw	r26, 0x02	; 2
 460:	e8 17       	cp	r30, r24
 462:	f9 07       	cpc	r31, r25
 464:	31 f4       	brne	.+12     	; 0x472 <vListRemove+0x40>
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 466:	84 81       	ldd	r24, Z+4	; 0x04
 468:	95 81       	ldd	r25, Z+5	; 0x05
 46a:	12 96       	adiw	r26, 0x02	; 2
 46c:	9c 93       	st	X, r25
 46e:	8e 93       	st	-X, r24
 470:	11 97       	sbiw	r26, 0x01	; 1
	}

	pxItemToRemove->pvContainer = NULL;
 472:	11 86       	std	Z+9, r1	; 0x09
 474:	10 86       	std	Z+8, r1	; 0x08
	( pxList->uxNumberOfItems )--;
 476:	8c 91       	ld	r24, X
 478:	81 50       	subi	r24, 0x01	; 1
 47a:	8c 93       	st	X, r24
 47c:	08 95       	ret

0000047e <output_value>:

void test_scale(){
	long weight = 0;
	while(1){
		weight = HX711_1_get_units(10);
		output_value(weight);
 47e:	8f 92       	push	r8
 480:	9f 92       	push	r9
 482:	af 92       	push	r10
 484:	bf 92       	push	r11
 486:	cf 92       	push	r12
 488:	df 92       	push	r13
 48a:	ef 92       	push	r14
 48c:	ff 92       	push	r15
 48e:	0f 93       	push	r16
 490:	1f 93       	push	r17
 492:	cf 93       	push	r28
 494:	df 93       	push	r29
 496:	99 23       	and	r25, r25
 498:	1c f4       	brge	.+6      	; 0x4a0 <output_value+0x22>
 49a:	60 e0       	ldi	r22, 0x00	; 0
 49c:	70 e0       	ldi	r23, 0x00	; 0
 49e:	cb 01       	movw	r24, r22
 4a0:	20 e0       	ldi	r18, 0x00	; 0
 4a2:	3a ec       	ldi	r19, 0xCA	; 202
 4a4:	4a e9       	ldi	r20, 0x9A	; 154
 4a6:	5b e3       	ldi	r21, 0x3B	; 59
 4a8:	1c d5       	rcall	.+2616   	; 0xee2 <__divmodsi4>
 4aa:	82 2e       	mov	r8, r18
 4ac:	20 e0       	ldi	r18, 0x00	; 0
 4ae:	31 ee       	ldi	r19, 0xE1	; 225
 4b0:	45 ef       	ldi	r20, 0xF5	; 245
 4b2:	55 e0       	ldi	r21, 0x05	; 5
 4b4:	16 d5       	rcall	.+2604   	; 0xee2 <__divmodsi4>
 4b6:	92 2e       	mov	r9, r18
 4b8:	20 e8       	ldi	r18, 0x80	; 128
 4ba:	36 e9       	ldi	r19, 0x96	; 150
 4bc:	48 e9       	ldi	r20, 0x98	; 152
 4be:	50 e0       	ldi	r21, 0x00	; 0
 4c0:	10 d5       	rcall	.+2592   	; 0xee2 <__divmodsi4>
 4c2:	a2 2e       	mov	r10, r18
 4c4:	20 e4       	ldi	r18, 0x40	; 64
 4c6:	32 e4       	ldi	r19, 0x42	; 66
 4c8:	4f e0       	ldi	r20, 0x0F	; 15
 4ca:	50 e0       	ldi	r21, 0x00	; 0
 4cc:	0a d5       	rcall	.+2580   	; 0xee2 <__divmodsi4>
 4ce:	b2 2e       	mov	r11, r18
 4d0:	20 ea       	ldi	r18, 0xA0	; 160
 4d2:	36 e8       	ldi	r19, 0x86	; 134
 4d4:	41 e0       	ldi	r20, 0x01	; 1
 4d6:	50 e0       	ldi	r21, 0x00	; 0
 4d8:	04 d5       	rcall	.+2568   	; 0xee2 <__divmodsi4>
 4da:	02 2f       	mov	r16, r18
 4dc:	20 e1       	ldi	r18, 0x10	; 16
 4de:	37 e2       	ldi	r19, 0x27	; 39
 4e0:	40 e0       	ldi	r20, 0x00	; 0
 4e2:	50 e0       	ldi	r21, 0x00	; 0
 4e4:	fe d4       	rcall	.+2556   	; 0xee2 <__divmodsi4>
 4e6:	12 2f       	mov	r17, r18
 4e8:	28 ee       	ldi	r18, 0xE8	; 232
 4ea:	33 e0       	ldi	r19, 0x03	; 3
 4ec:	40 e0       	ldi	r20, 0x00	; 0
 4ee:	50 e0       	ldi	r21, 0x00	; 0
 4f0:	f8 d4       	rcall	.+2544   	; 0xee2 <__divmodsi4>
 4f2:	d2 2f       	mov	r29, r18
 4f4:	24 e6       	ldi	r18, 0x64	; 100
 4f6:	30 e0       	ldi	r19, 0x00	; 0
 4f8:	40 e0       	ldi	r20, 0x00	; 0
 4fa:	50 e0       	ldi	r21, 0x00	; 0
 4fc:	f2 d4       	rcall	.+2532   	; 0xee2 <__divmodsi4>
 4fe:	c2 2f       	mov	r28, r18
 500:	6b 01       	movw	r12, r22
 502:	7c 01       	movw	r14, r24
 504:	af d0       	rcall	.+350    	; 0x664 <nokia_lcd_clear>
 506:	61 e0       	ldi	r22, 0x01	; 1
 508:	80 e3       	ldi	r24, 0x30	; 48
 50a:	88 0d       	add	r24, r8
 50c:	e7 d0       	rcall	.+462    	; 0x6dc <nokia_lcd_write_char>
 50e:	61 e0       	ldi	r22, 0x01	; 1
 510:	80 e3       	ldi	r24, 0x30	; 48
 512:	89 0d       	add	r24, r9
 514:	e3 d0       	rcall	.+454    	; 0x6dc <nokia_lcd_write_char>
 516:	61 e0       	ldi	r22, 0x01	; 1
 518:	80 e3       	ldi	r24, 0x30	; 48
 51a:	8a 0d       	add	r24, r10
 51c:	df d0       	rcall	.+446    	; 0x6dc <nokia_lcd_write_char>
 51e:	61 e0       	ldi	r22, 0x01	; 1
 520:	80 e3       	ldi	r24, 0x30	; 48
 522:	8b 0d       	add	r24, r11
 524:	db d0       	rcall	.+438    	; 0x6dc <nokia_lcd_write_char>
 526:	61 e0       	ldi	r22, 0x01	; 1
 528:	80 e3       	ldi	r24, 0x30	; 48
 52a:	80 0f       	add	r24, r16
 52c:	d7 d0       	rcall	.+430    	; 0x6dc <nokia_lcd_write_char>
 52e:	61 e0       	ldi	r22, 0x01	; 1
 530:	80 e3       	ldi	r24, 0x30	; 48
 532:	81 0f       	add	r24, r17
 534:	d3 d0       	rcall	.+422    	; 0x6dc <nokia_lcd_write_char>
 536:	61 e0       	ldi	r22, 0x01	; 1
 538:	80 e3       	ldi	r24, 0x30	; 48
 53a:	8d 0f       	add	r24, r29
 53c:	cf d0       	rcall	.+414    	; 0x6dc <nokia_lcd_write_char>
 53e:	61 e0       	ldi	r22, 0x01	; 1
 540:	80 e3       	ldi	r24, 0x30	; 48
 542:	8c 0f       	add	r24, r28
 544:	cb d0       	rcall	.+406    	; 0x6dc <nokia_lcd_write_char>
 546:	c7 01       	movw	r24, r14
 548:	b6 01       	movw	r22, r12
 54a:	2a e0       	ldi	r18, 0x0A	; 10
 54c:	30 e0       	ldi	r19, 0x00	; 0
 54e:	40 e0       	ldi	r20, 0x00	; 0
 550:	50 e0       	ldi	r21, 0x00	; 0
 552:	c7 d4       	rcall	.+2446   	; 0xee2 <__divmodsi4>
 554:	c6 2f       	mov	r28, r22
 556:	61 e0       	ldi	r22, 0x01	; 1
 558:	80 e3       	ldi	r24, 0x30	; 48
 55a:	82 0f       	add	r24, r18
 55c:	bf d0       	rcall	.+382    	; 0x6dc <nokia_lcd_write_char>
 55e:	61 e0       	ldi	r22, 0x01	; 1
 560:	80 e3       	ldi	r24, 0x30	; 48
 562:	8c 0f       	add	r24, r28
 564:	bb d0       	rcall	.+374    	; 0x6dc <nokia_lcd_write_char>
 566:	64 d1       	rcall	.+712    	; 0x830 <nokia_lcd_render>
 568:	df 91       	pop	r29
 56a:	cf 91       	pop	r28
 56c:	1f 91       	pop	r17
 56e:	0f 91       	pop	r16
 570:	ff 90       	pop	r15
 572:	ef 90       	pop	r14
 574:	df 90       	pop	r13
 576:	cf 90       	pop	r12
 578:	bf 90       	pop	r11
 57a:	af 90       	pop	r10
 57c:	9f 90       	pop	r9
 57e:	8f 90       	pop	r8
 580:	08 95       	ret

00000582 <calibrate>:
 582:	8a e0       	ldi	r24, 0x0A	; 10
 584:	dd de       	rcall	.-582    	; 0x340 <HX711_1_read_average>
 586:	8a e0       	ldi	r24, 0x0A	; 10
 588:	db de       	rcall	.-586    	; 0x340 <HX711_1_read_average>
 58a:	8a e0       	ldi	r24, 0x0A	; 10
 58c:	0e df       	rcall	.-484    	; 0x3aa <HX711_1_get_units>
 58e:	bc d3       	rcall	.+1912   	; 0xd08 <__fixsfsi>
 590:	76 df       	rcall	.-276    	; 0x47e <output_value>
 592:	fb cf       	rjmp	.-10     	; 0x58a <calibrate+0x8>

00000594 <main>:
	y_min = 120343 / 138 = 872.0507246
	y_max = 124741 / 138 = 903.9202899
	
	*/
	
	DDRD = 0xFF; PORTD = 0x00;
 594:	8f ef       	ldi	r24, 0xFF	; 255
 596:	8a b9       	out	0x0a, r24	; 10
 598:	1b b8       	out	0x0b, r1	; 11
	
	nokia_lcd_init();
 59a:	2e d0       	rcall	.+92     	; 0x5f8 <nokia_lcd_init>
	
	//HX711_1_init(128);						// values for 1kg scale
	//HX711_1_set_offset(8409384);			// values for 1kg scale
	//HX711_1_set_scale(-946.4825995);		// values for 1kg scale	
	HX711_1_init(64);						// values for 5kg scale
 59c:	80 e4       	ldi	r24, 0x40	; 64
 59e:	cb de       	rcall	.-618    	; 0x336 <HX711_1_init>
	HX711_1_set_offset(8406650);			// values for 5kg scale
 5a0:	6a e7       	ldi	r22, 0x7A	; 122
 5a2:	76 e4       	ldi	r23, 0x46	; 70
 5a4:	80 e0       	ldi	r24, 0x00	; 0
 5a6:	9b e4       	ldi	r25, 0x4B	; 75
 5a8:	14 df       	rcall	.-472    	; 0x3d2 <HX711_1_set_offset>
	HX711_1_set_scale(-163.4955075);		// values for 5kg scale				
 5aa:	6a ed       	ldi	r22, 0xDA	; 218
 5ac:	7e e7       	ldi	r23, 0x7E	; 126
 5ae:	83 e2       	ldi	r24, 0x23	; 35
 5b0:	93 ec       	ldi	r25, 0xC3	; 195
	calibrate();
 5b2:	06 df       	rcall	.-500    	; 0x3c0 <HX711_1_set_scale>
 5b4:	e6 df       	rcall	.-52     	; 0x582 <calibrate>

000005b6 <write>:
}

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
	nokia_lcd.cursor_y = y;
 5b6:	59 98       	cbi	0x0b, 1	; 11
 5b8:	66 23       	and	r22, r22
 5ba:	11 f0       	breq	.+4      	; 0x5c0 <write+0xa>
 5bc:	5b 9a       	sbi	0x0b, 3	; 11
 5be:	15 c0       	rjmp	.+42     	; 0x5ea <write+0x34>
 5c0:	5b 98       	cbi	0x0b, 3	; 11
 5c2:	13 c0       	rjmp	.+38     	; 0x5ea <write+0x34>
 5c4:	ac 01       	movw	r20, r24
 5c6:	02 2e       	mov	r0, r18
 5c8:	02 c0       	rjmp	.+4      	; 0x5ce <write+0x18>
 5ca:	55 95       	asr	r21
 5cc:	47 95       	ror	r20
 5ce:	0a 94       	dec	r0
 5d0:	e2 f7       	brpl	.-8      	; 0x5ca <write+0x14>
 5d2:	40 ff       	sbrs	r20, 0
 5d4:	02 c0       	rjmp	.+4      	; 0x5da <write+0x24>
 5d6:	5c 9a       	sbi	0x0b, 4	; 11
 5d8:	01 c0       	rjmp	.+2      	; 0x5dc <write+0x26>
 5da:	5c 98       	cbi	0x0b, 4	; 11
 5dc:	5d 9a       	sbi	0x0b, 5	; 11
 5de:	5d 98       	cbi	0x0b, 5	; 11
 5e0:	21 50       	subi	r18, 0x01	; 1
 5e2:	31 09       	sbc	r19, r1
 5e4:	78 f7       	brcc	.-34     	; 0x5c4 <write+0xe>
 5e6:	59 9a       	sbi	0x0b, 1	; 11
 5e8:	08 95       	ret
 5ea:	27 e0       	ldi	r18, 0x07	; 7
 5ec:	30 e0       	ldi	r19, 0x00	; 0
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	e9 cf       	rjmp	.-46     	; 0x5c4 <write+0xe>

000005f2 <write_cmd>:
 5f2:	60 e0       	ldi	r22, 0x00	; 0
 5f4:	e0 cf       	rjmp	.-64     	; 0x5b6 <write>
 5f6:	08 95       	ret

000005f8 <nokia_lcd_init>:
 5f8:	cf 93       	push	r28
 5fa:	df 93       	push	r29
 5fc:	51 9a       	sbi	0x0a, 1	; 10
 5fe:	52 9a       	sbi	0x0a, 2	; 10
 600:	53 9a       	sbi	0x0a, 3	; 10
 602:	54 9a       	sbi	0x0a, 4	; 10
 604:	55 9a       	sbi	0x0a, 5	; 10
 606:	5a 9a       	sbi	0x0b, 2	; 11
 608:	59 9a       	sbi	0x0b, 1	; 11
 60a:	83 ec       	ldi	r24, 0xC3	; 195
 60c:	99 e0       	ldi	r25, 0x09	; 9
 60e:	01 97       	sbiw	r24, 0x01	; 1
 610:	f1 f7       	brne	.-4      	; 0x60e <nokia_lcd_init+0x16>
 612:	00 c0       	rjmp	.+0      	; 0x614 <nokia_lcd_init+0x1c>
 614:	00 00       	nop
 616:	5a 98       	cbi	0x0b, 2	; 11
 618:	8b e5       	ldi	r24, 0x5B	; 91
 61a:	94 e4       	ldi	r25, 0x44	; 68
 61c:	01 97       	sbiw	r24, 0x01	; 1
 61e:	f1 f7       	brne	.-4      	; 0x61c <nokia_lcd_init+0x24>
 620:	00 c0       	rjmp	.+0      	; 0x622 <nokia_lcd_init+0x2a>
 622:	00 00       	nop
 624:	5a 9a       	sbi	0x0b, 2	; 11
 626:	59 98       	cbi	0x0b, 1	; 11
 628:	81 e2       	ldi	r24, 0x21	; 33
 62a:	e3 df       	rcall	.-58     	; 0x5f2 <write_cmd>
 62c:	83 e1       	ldi	r24, 0x13	; 19
 62e:	e1 df       	rcall	.-62     	; 0x5f2 <write_cmd>
 630:	86 e0       	ldi	r24, 0x06	; 6
 632:	df df       	rcall	.-66     	; 0x5f2 <write_cmd>
 634:	82 ec       	ldi	r24, 0xC2	; 194
 636:	dd df       	rcall	.-70     	; 0x5f2 <write_cmd>
 638:	80 e2       	ldi	r24, 0x20	; 32
 63a:	db df       	rcall	.-74     	; 0x5f2 <write_cmd>
 63c:	89 e0       	ldi	r24, 0x09	; 9
 63e:	d9 df       	rcall	.-78     	; 0x5f2 <write_cmd>
 640:	80 e8       	ldi	r24, 0x80	; 128
 642:	d7 df       	rcall	.-82     	; 0x5f2 <write_cmd>
 644:	80 e4       	ldi	r24, 0x40	; 64
 646:	d5 df       	rcall	.-86     	; 0x5f2 <write_cmd>
 648:	c8 ef       	ldi	r28, 0xF8	; 248
 64a:	d1 e0       	ldi	r29, 0x01	; 1
 64c:	61 e0       	ldi	r22, 0x01	; 1
 64e:	80 e0       	ldi	r24, 0x00	; 0
 650:	b2 df       	rcall	.-156    	; 0x5b6 <write>
 652:	21 97       	sbiw	r28, 0x01	; 1
 654:	d9 f7       	brne	.-10     	; 0x64c <nokia_lcd_init+0x54>
 656:	88 e0       	ldi	r24, 0x08	; 8
 658:	cc df       	rcall	.-104    	; 0x5f2 <write_cmd>
 65a:	8c e0       	ldi	r24, 0x0C	; 12
 65c:	ca df       	rcall	.-108    	; 0x5f2 <write_cmd>
 65e:	df 91       	pop	r29
 660:	cf 91       	pop	r28
 662:	08 95       	ret

00000664 <nokia_lcd_clear>:
 664:	80 e8       	ldi	r24, 0x80	; 128
 666:	c5 df       	rcall	.-118    	; 0x5f2 <write_cmd>
 668:	80 e4       	ldi	r24, 0x40	; 64
 66a:	c3 df       	rcall	.-122    	; 0x5f2 <write_cmd>
 66c:	10 92 fa 02 	sts	0x02FA, r1	; 0x8002fa <__data_end+0x1f8>
 670:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <__data_end+0x1f9>
 674:	e2 e0       	ldi	r30, 0x02	; 2
 676:	f1 e0       	ldi	r31, 0x01	; 1
 678:	8a ef       	ldi	r24, 0xFA	; 250
 67a:	92 e0       	ldi	r25, 0x02	; 2
 67c:	11 92       	st	Z+, r1
 67e:	e8 17       	cp	r30, r24
 680:	f9 07       	cpc	r31, r25
 682:	e1 f7       	brne	.-8      	; 0x67c <nokia_lcd_clear+0x18>
 684:	08 95       	ret

00000686 <nokia_lcd_set_pixel>:
 686:	26 2f       	mov	r18, r22
 688:	26 95       	lsr	r18
 68a:	26 95       	lsr	r18
 68c:	26 95       	lsr	r18
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	34 e5       	ldi	r19, 0x54	; 84
 692:	23 9f       	mul	r18, r19
 694:	80 0d       	add	r24, r0
 696:	91 1d       	adc	r25, r1
 698:	11 24       	eor	r1, r1
 69a:	44 23       	and	r20, r20
 69c:	79 f0       	breq	.+30     	; 0x6bc <nokia_lcd_set_pixel+0x36>
 69e:	fc 01       	movw	r30, r24
 6a0:	ee 5f       	subi	r30, 0xFE	; 254
 6a2:	fe 4f       	sbci	r31, 0xFE	; 254
 6a4:	67 70       	andi	r22, 0x07	; 7
 6a6:	81 e0       	ldi	r24, 0x01	; 1
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	02 c0       	rjmp	.+4      	; 0x6b0 <nokia_lcd_set_pixel+0x2a>
 6ac:	88 0f       	add	r24, r24
 6ae:	99 1f       	adc	r25, r25
 6b0:	6a 95       	dec	r22
 6b2:	e2 f7       	brpl	.-8      	; 0x6ac <nokia_lcd_set_pixel+0x26>
 6b4:	90 81       	ld	r25, Z
 6b6:	89 2b       	or	r24, r25
 6b8:	80 83       	st	Z, r24
 6ba:	08 95       	ret
 6bc:	fc 01       	movw	r30, r24
 6be:	ee 5f       	subi	r30, 0xFE	; 254
 6c0:	fe 4f       	sbci	r31, 0xFE	; 254
 6c2:	67 70       	andi	r22, 0x07	; 7
 6c4:	81 e0       	ldi	r24, 0x01	; 1
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	02 c0       	rjmp	.+4      	; 0x6ce <nokia_lcd_set_pixel+0x48>
 6ca:	88 0f       	add	r24, r24
 6cc:	99 1f       	adc	r25, r25
 6ce:	6a 95       	dec	r22
 6d0:	e2 f7       	brpl	.-8      	; 0x6ca <nokia_lcd_set_pixel+0x44>
 6d2:	80 95       	com	r24
 6d4:	90 81       	ld	r25, Z
 6d6:	89 23       	and	r24, r25
 6d8:	80 83       	st	Z, r24
 6da:	08 95       	ret

000006dc <nokia_lcd_write_char>:
 6dc:	5f 92       	push	r5
 6de:	6f 92       	push	r6
 6e0:	7f 92       	push	r7
 6e2:	8f 92       	push	r8
 6e4:	9f 92       	push	r9
 6e6:	af 92       	push	r10
 6e8:	bf 92       	push	r11
 6ea:	cf 92       	push	r12
 6ec:	df 92       	push	r13
 6ee:	ef 92       	push	r14
 6f0:	ff 92       	push	r15
 6f2:	0f 93       	push	r16
 6f4:	1f 93       	push	r17
 6f6:	cf 93       	push	r28
 6f8:	df 93       	push	r29
 6fa:	56 2e       	mov	r5, r22
 6fc:	26 2f       	mov	r18, r22
 6fe:	30 e0       	ldi	r19, 0x00	; 0
 700:	49 01       	movw	r8, r18
 702:	88 0c       	add	r8, r8
 704:	99 1c       	adc	r9, r9
 706:	88 0c       	add	r8, r8
 708:	99 1c       	adc	r9, r9
 70a:	82 0e       	add	r8, r18
 70c:	93 1e       	adc	r9, r19
 70e:	18 14       	cp	r1, r8
 710:	19 04       	cpc	r1, r9
 712:	0c f0       	brlt	.+2      	; 0x716 <nokia_lcd_write_char+0x3a>
 714:	59 c0       	rjmp	.+178    	; 0x7c8 <nokia_lcd_write_char+0xec>
 716:	89 01       	movw	r16, r18
 718:	00 0f       	add	r16, r16
 71a:	11 1f       	adc	r17, r17
 71c:	00 0f       	add	r16, r16
 71e:	11 1f       	adc	r17, r17
 720:	00 0f       	add	r16, r16
 722:	11 1f       	adc	r17, r17
 724:	02 1b       	sub	r16, r18
 726:	13 0b       	sbc	r17, r19
 728:	61 2c       	mov	r6, r1
 72a:	a8 2e       	mov	r10, r24
 72c:	b1 2c       	mov	r11, r1
 72e:	c5 01       	movw	r24, r10
 730:	80 97       	sbiw	r24, 0x20	; 32
 732:	5c 01       	movw	r10, r24
 734:	aa 0c       	add	r10, r10
 736:	bb 1c       	adc	r11, r11
 738:	aa 0c       	add	r10, r10
 73a:	bb 1c       	adc	r11, r11
 73c:	a8 0e       	add	r10, r24
 73e:	b9 1e       	adc	r11, r25
 740:	0f 2e       	mov	r0, r31
 742:	fb ef       	ldi	r31, 0xFB	; 251
 744:	cf 2e       	mov	r12, r31
 746:	f2 e0       	ldi	r31, 0x02	; 2
 748:	df 2e       	mov	r13, r31
 74a:	f0 2d       	mov	r31, r0
 74c:	0f 2e       	mov	r0, r31
 74e:	fa ef       	ldi	r31, 0xFA	; 250
 750:	ef 2e       	mov	r14, r31
 752:	f2 e0       	ldi	r31, 0x02	; 2
 754:	ff 2e       	mov	r15, r31
 756:	f0 2d       	mov	r31, r0
 758:	2a c0       	rjmp	.+84     	; 0x7ae <nokia_lcd_write_char+0xd2>
 75a:	fe 01       	movw	r30, r28
 75c:	24 91       	lpm	r18, Z
 75e:	30 e0       	ldi	r19, 0x00	; 0
 760:	87 2d       	mov	r24, r7
 762:	65 2d       	mov	r22, r5
 764:	90 d3       	rcall	.+1824   	; 0xe86 <__udivmodqi4>
 766:	02 c0       	rjmp	.+4      	; 0x76c <nokia_lcd_write_char+0x90>
 768:	35 95       	asr	r19
 76a:	27 95       	ror	r18
 76c:	8a 95       	dec	r24
 76e:	e2 f7       	brpl	.-8      	; 0x768 <nokia_lcd_write_char+0x8c>
 770:	20 ff       	sbrs	r18, 0
 772:	09 c0       	rjmp	.+18     	; 0x786 <nokia_lcd_write_char+0xaa>
 774:	f6 01       	movw	r30, r12
 776:	60 81       	ld	r22, Z
 778:	67 0d       	add	r22, r7
 77a:	f7 01       	movw	r30, r14
 77c:	80 81       	ld	r24, Z
 77e:	41 e0       	ldi	r20, 0x01	; 1
 780:	86 0d       	add	r24, r6
 782:	81 df       	rcall	.-254    	; 0x686 <nokia_lcd_set_pixel>
 784:	08 c0       	rjmp	.+16     	; 0x796 <nokia_lcd_write_char+0xba>
 786:	f6 01       	movw	r30, r12
 788:	60 81       	ld	r22, Z
 78a:	67 0d       	add	r22, r7
 78c:	f7 01       	movw	r30, r14
 78e:	80 81       	ld	r24, Z
 790:	40 e0       	ldi	r20, 0x00	; 0
 792:	86 0d       	add	r24, r6
 794:	78 df       	rcall	.-272    	; 0x686 <nokia_lcd_set_pixel>
 796:	73 94       	inc	r7
 798:	87 2d       	mov	r24, r7
 79a:	90 e0       	ldi	r25, 0x00	; 0
 79c:	80 17       	cp	r24, r16
 79e:	91 07       	cpc	r25, r17
 7a0:	e4 f2       	brlt	.-72     	; 0x75a <nokia_lcd_write_char+0x7e>
 7a2:	63 94       	inc	r6
 7a4:	86 2d       	mov	r24, r6
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	88 15       	cp	r24, r8
 7aa:	99 05       	cpc	r25, r9
 7ac:	6c f4       	brge	.+26     	; 0x7c8 <nokia_lcd_write_char+0xec>
 7ae:	10 16       	cp	r1, r16
 7b0:	11 06       	cpc	r1, r17
 7b2:	bc f7       	brge	.-18     	; 0x7a2 <nokia_lcd_write_char+0xc6>
 7b4:	86 2d       	mov	r24, r6
 7b6:	65 2d       	mov	r22, r5
 7b8:	66 d3       	rcall	.+1740   	; 0xe86 <__udivmodqi4>
 7ba:	e5 01       	movw	r28, r10
 7bc:	c8 0f       	add	r28, r24
 7be:	d1 1d       	adc	r29, r1
 7c0:	c4 57       	subi	r28, 0x74	; 116
 7c2:	df 4f       	sbci	r29, 0xFF	; 255
 7c4:	71 2c       	mov	r7, r1
 7c6:	c9 cf       	rjmp	.-110    	; 0x75a <nokia_lcd_write_char+0x7e>
 7c8:	80 91 fa 02 	lds	r24, 0x02FA	; 0x8002fa <__data_end+0x1f8>
 7cc:	91 e0       	ldi	r25, 0x01	; 1
 7ce:	98 0f       	add	r25, r24
 7d0:	85 2d       	mov	r24, r5
 7d2:	88 0f       	add	r24, r24
 7d4:	88 0f       	add	r24, r24
 7d6:	85 0d       	add	r24, r5
 7d8:	89 0f       	add	r24, r25
 7da:	84 35       	cpi	r24, 0x54	; 84
 7dc:	18 f4       	brcc	.+6      	; 0x7e4 <nokia_lcd_write_char+0x108>
 7de:	80 93 fa 02 	sts	0x02FA, r24	; 0x8002fa <__data_end+0x1f8>
 7e2:	0e c0       	rjmp	.+28     	; 0x800 <nokia_lcd_write_char+0x124>
 7e4:	10 92 fa 02 	sts	0x02FA, r1	; 0x8002fa <__data_end+0x1f8>
 7e8:	eb ef       	ldi	r30, 0xFB	; 251
 7ea:	f2 e0       	ldi	r31, 0x02	; 2
 7ec:	80 81       	ld	r24, Z
 7ee:	91 e0       	ldi	r25, 0x01	; 1
 7f0:	98 0f       	add	r25, r24
 7f2:	85 2d       	mov	r24, r5
 7f4:	88 0f       	add	r24, r24
 7f6:	88 0f       	add	r24, r24
 7f8:	88 0f       	add	r24, r24
 7fa:	85 19       	sub	r24, r5
 7fc:	89 0f       	add	r24, r25
 7fe:	80 83       	st	Z, r24
 800:	80 91 fb 02 	lds	r24, 0x02FB	; 0x8002fb <__data_end+0x1f9>
 804:	80 33       	cpi	r24, 0x30	; 48
 806:	20 f0       	brcs	.+8      	; 0x810 <nokia_lcd_write_char+0x134>
 808:	10 92 fa 02 	sts	0x02FA, r1	; 0x8002fa <__data_end+0x1f8>
 80c:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <__data_end+0x1f9>
 810:	df 91       	pop	r29
 812:	cf 91       	pop	r28
 814:	1f 91       	pop	r17
 816:	0f 91       	pop	r16
 818:	ff 90       	pop	r15
 81a:	ef 90       	pop	r14
 81c:	df 90       	pop	r13
 81e:	cf 90       	pop	r12
 820:	bf 90       	pop	r11
 822:	af 90       	pop	r10
 824:	9f 90       	pop	r9
 826:	8f 90       	pop	r8
 828:	7f 90       	pop	r7
 82a:	6f 90       	pop	r6
 82c:	5f 90       	pop	r5
 82e:	08 95       	ret

00000830 <nokia_lcd_render>:
}

void nokia_lcd_render(void)
{
 830:	0f 93       	push	r16
 832:	1f 93       	push	r17
 834:	cf 93       	push	r28
 836:	df 93       	push	r29
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
 838:	80 e8       	ldi	r24, 0x80	; 128
 83a:	db de       	rcall	.-586    	; 0x5f2 <write_cmd>
	write_cmd(0x40);
 83c:	80 e4       	ldi	r24, 0x40	; 64
 83e:	d9 de       	rcall	.-590    	; 0x5f2 <write_cmd>
 840:	c2 e0       	ldi	r28, 0x02	; 2
 842:	d1 e0       	ldi	r29, 0x01	; 1
 844:	0a ef       	ldi	r16, 0xFA	; 250
 846:	12 e0       	ldi	r17, 0x02	; 2
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
 848:	61 e0       	ldi	r22, 0x01	; 1
 84a:	89 91       	ld	r24, Y+
 84c:	b4 de       	rcall	.-664    	; 0x5b6 <write>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
 84e:	c0 17       	cp	r28, r16
 850:	d1 07       	cpc	r29, r17
 852:	d1 f7       	brne	.-12     	; 0x848 <nokia_lcd_render+0x18>
		write_data(nokia_lcd.screen[i]);
}
 854:	df 91       	pop	r29
 856:	cf 91       	pop	r28
 858:	1f 91       	pop	r17
 85a:	0f 91       	pop	r16
 85c:	08 95       	ret

0000085e <vPortYieldFromTick>:
 * call comes from the tick ISR.
 */
void vPortYieldFromTick( void ) __attribute__ ( ( naked ) );
void vPortYieldFromTick( void )
{
	portSAVE_CONTEXT();
 85e:	0f 92       	push	r0
 860:	0f b6       	in	r0, 0x3f	; 63
 862:	f8 94       	cli
 864:	0f 92       	push	r0
 866:	1f 92       	push	r1
 868:	11 24       	eor	r1, r1
 86a:	2f 92       	push	r2
 86c:	3f 92       	push	r3
 86e:	4f 92       	push	r4
 870:	5f 92       	push	r5
 872:	6f 92       	push	r6
 874:	7f 92       	push	r7
 876:	8f 92       	push	r8
 878:	9f 92       	push	r9
 87a:	af 92       	push	r10
 87c:	bf 92       	push	r11
 87e:	cf 92       	push	r12
 880:	df 92       	push	r13
 882:	ef 92       	push	r14
 884:	ff 92       	push	r15
 886:	0f 93       	push	r16
 888:	1f 93       	push	r17
 88a:	2f 93       	push	r18
 88c:	3f 93       	push	r19
 88e:	4f 93       	push	r20
 890:	5f 93       	push	r21
 892:	6f 93       	push	r22
 894:	7f 93       	push	r23
 896:	8f 93       	push	r24
 898:	9f 93       	push	r25
 89a:	af 93       	push	r26
 89c:	bf 93       	push	r27
 89e:	cf 93       	push	r28
 8a0:	df 93       	push	r29
 8a2:	ef 93       	push	r30
 8a4:	ff 93       	push	r31
 8a6:	a0 91 2b 03 	lds	r26, 0x032B	; 0x80032b <pxCurrentTCB>
 8aa:	b0 91 2c 03 	lds	r27, 0x032C	; 0x80032c <pxCurrentTCB+0x1>
 8ae:	0d b6       	in	r0, 0x3d	; 61
 8b0:	0d 92       	st	X+, r0
 8b2:	0e b6       	in	r0, 0x3e	; 62
 8b4:	0d 92       	st	X+, r0
	vTaskIncrementTick();
 8b6:	2e d0       	rcall	.+92     	; 0x914 <vTaskIncrementTick>
	vTaskSwitchContext();
 8b8:	ee d0       	rcall	.+476    	; 0xa96 <vTaskSwitchContext>
 8ba:	a0 91 2b 03 	lds	r26, 0x032B	; 0x80032b <pxCurrentTCB>
	portRESTORE_CONTEXT();
 8be:	b0 91 2c 03 	lds	r27, 0x032C	; 0x80032c <pxCurrentTCB+0x1>
 8c2:	cd 91       	ld	r28, X+
 8c4:	cd bf       	out	0x3d, r28	; 61
 8c6:	dd 91       	ld	r29, X+
 8c8:	de bf       	out	0x3e, r29	; 62
 8ca:	ff 91       	pop	r31
 8cc:	ef 91       	pop	r30
 8ce:	df 91       	pop	r29
 8d0:	cf 91       	pop	r28
 8d2:	bf 91       	pop	r27
 8d4:	af 91       	pop	r26
 8d6:	9f 91       	pop	r25
 8d8:	8f 91       	pop	r24
 8da:	7f 91       	pop	r23
 8dc:	6f 91       	pop	r22
 8de:	5f 91       	pop	r21
 8e0:	4f 91       	pop	r20
 8e2:	3f 91       	pop	r19
 8e4:	2f 91       	pop	r18
 8e6:	1f 91       	pop	r17
 8e8:	0f 91       	pop	r16
 8ea:	ff 90       	pop	r15
 8ec:	ef 90       	pop	r14
 8ee:	df 90       	pop	r13
 8f0:	cf 90       	pop	r12
 8f2:	bf 90       	pop	r11
 8f4:	af 90       	pop	r10
 8f6:	9f 90       	pop	r9
 8f8:	8f 90       	pop	r8
 8fa:	7f 90       	pop	r7
 8fc:	6f 90       	pop	r6
 8fe:	5f 90       	pop	r5
 900:	4f 90       	pop	r4
 902:	3f 90       	pop	r3
 904:	2f 90       	pop	r2
 906:	1f 90       	pop	r1
 908:	0f 90       	pop	r0
 90a:	0f be       	out	0x3f, r0	; 63
 90c:	0f 90       	pop	r0
 90e:	08 95       	ret

00000910 <__vector_13>:

	asm volatile ( "ret" );
 910:	a6 df       	rcall	.-180    	; 0x85e <vPortYieldFromTick>
	 */
	void TIMER1_COMPA_vect( void ) __attribute__ ( ( signal, naked ) );
	void TIMER1_COMPA_vect( void )
	{
		vPortYieldFromTick();
		asm volatile ( "reti" );
 912:	18 95       	reti

00000914 <vTaskIncrementTick>:
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( unsigned portBASE_TYPE ) 1 )
			{
				taskYIELD();
 914:	0f 93       	push	r16
 916:	1f 93       	push	r17
 918:	cf 93       	push	r28
 91a:	df 93       	push	r29
 91c:	80 91 ff 02 	lds	r24, 0x02FF	; 0x8002ff <uxSchedulerSuspended>
 920:	81 11       	cpse	r24, r1
 922:	af c0       	rjmp	.+350    	; 0xa82 <vTaskIncrementTick+0x16e>
 924:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <xTickCount>
 928:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <xTickCount+0x1>
 92c:	01 96       	adiw	r24, 0x01	; 1
 92e:	90 93 02 03 	sts	0x0302, r25	; 0x800302 <xTickCount+0x1>
 932:	80 93 01 03 	sts	0x0301, r24	; 0x800301 <xTickCount>
 936:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <xTickCount>
 93a:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <xTickCount+0x1>
 93e:	89 2b       	or	r24, r25
 940:	99 f5       	brne	.+102    	; 0x9a8 <vTaskIncrementTick+0x94>
 942:	80 91 05 03 	lds	r24, 0x0305	; 0x800305 <pxDelayedTaskList>
 946:	90 91 06 03 	lds	r25, 0x0306	; 0x800306 <pxDelayedTaskList+0x1>
 94a:	20 91 03 03 	lds	r18, 0x0303	; 0x800303 <pxOverflowDelayedTaskList>
 94e:	30 91 04 03 	lds	r19, 0x0304	; 0x800304 <pxOverflowDelayedTaskList+0x1>
 952:	30 93 06 03 	sts	0x0306, r19	; 0x800306 <pxDelayedTaskList+0x1>
 956:	20 93 05 03 	sts	0x0305, r18	; 0x800305 <pxDelayedTaskList>
 95a:	90 93 04 03 	sts	0x0304, r25	; 0x800304 <pxOverflowDelayedTaskList+0x1>
 95e:	80 93 03 03 	sts	0x0303, r24	; 0x800303 <pxOverflowDelayedTaskList>
 962:	80 91 fc 02 	lds	r24, 0x02FC	; 0x8002fc <xNumOfOverflows>
 966:	8f 5f       	subi	r24, 0xFF	; 255
 968:	80 93 fc 02 	sts	0x02FC, r24	; 0x8002fc <xNumOfOverflows>
 96c:	e0 91 05 03 	lds	r30, 0x0305	; 0x800305 <pxDelayedTaskList>
 970:	f0 91 06 03 	lds	r31, 0x0306	; 0x800306 <pxDelayedTaskList+0x1>
 974:	80 81       	ld	r24, Z
 976:	81 11       	cpse	r24, r1
 978:	07 c0       	rjmp	.+14     	; 0x988 <vTaskIncrementTick+0x74>
 97a:	8f ef       	ldi	r24, 0xFF	; 255
 97c:	9f ef       	ldi	r25, 0xFF	; 255
 97e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 982:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 986:	10 c0       	rjmp	.+32     	; 0x9a8 <vTaskIncrementTick+0x94>
 988:	e0 91 05 03 	lds	r30, 0x0305	; 0x800305 <pxDelayedTaskList>
 98c:	f0 91 06 03 	lds	r31, 0x0306	; 0x800306 <pxDelayedTaskList+0x1>
 990:	05 80       	ldd	r0, Z+5	; 0x05
 992:	f6 81       	ldd	r31, Z+6	; 0x06
 994:	e0 2d       	mov	r30, r0
 996:	06 80       	ldd	r0, Z+6	; 0x06
 998:	f7 81       	ldd	r31, Z+7	; 0x07
 99a:	e0 2d       	mov	r30, r0
 99c:	82 81       	ldd	r24, Z+2	; 0x02
 99e:	93 81       	ldd	r25, Z+3	; 0x03
 9a0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 9a4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 9a8:	20 91 01 03 	lds	r18, 0x0301	; 0x800301 <xTickCount>
 9ac:	30 91 02 03 	lds	r19, 0x0302	; 0x800302 <xTickCount+0x1>
 9b0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 9b4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 9b8:	28 17       	cp	r18, r24
 9ba:	39 07       	cpc	r19, r25
 9bc:	08 f4       	brcc	.+2      	; 0x9c0 <vTaskIncrementTick+0xac>
 9be:	66 c0       	rjmp	.+204    	; 0xa8c <vTaskIncrementTick+0x178>
 9c0:	e0 91 05 03 	lds	r30, 0x0305	; 0x800305 <pxDelayedTaskList>
 9c4:	f0 91 06 03 	lds	r31, 0x0306	; 0x800306 <pxDelayedTaskList+0x1>
 9c8:	80 81       	ld	r24, Z
 9ca:	88 23       	and	r24, r24
 9cc:	99 f0       	breq	.+38     	; 0x9f4 <vTaskIncrementTick+0xe0>
 9ce:	e0 91 05 03 	lds	r30, 0x0305	; 0x800305 <pxDelayedTaskList>
 9d2:	f0 91 06 03 	lds	r31, 0x0306	; 0x800306 <pxDelayedTaskList+0x1>
 9d6:	05 80       	ldd	r0, Z+5	; 0x05
 9d8:	f6 81       	ldd	r31, Z+6	; 0x06
 9da:	e0 2d       	mov	r30, r0
 9dc:	c6 81       	ldd	r28, Z+6	; 0x06
 9de:	d7 81       	ldd	r29, Z+7	; 0x07
 9e0:	8a 81       	ldd	r24, Y+2	; 0x02
 9e2:	9b 81       	ldd	r25, Y+3	; 0x03
 9e4:	20 91 01 03 	lds	r18, 0x0301	; 0x800301 <xTickCount>
 9e8:	30 91 02 03 	lds	r19, 0x0302	; 0x800302 <xTickCount+0x1>
 9ec:	28 17       	cp	r18, r24
 9ee:	39 07       	cpc	r19, r25
 9f0:	f8 f4       	brcc	.+62     	; 0xa30 <vTaskIncrementTick+0x11c>
 9f2:	19 c0       	rjmp	.+50     	; 0xa26 <vTaskIncrementTick+0x112>
 9f4:	8f ef       	ldi	r24, 0xFF	; 255
 9f6:	9f ef       	ldi	r25, 0xFF	; 255
 9f8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 9fc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 a00:	45 c0       	rjmp	.+138    	; 0xa8c <vTaskIncrementTick+0x178>
 a02:	e0 91 05 03 	lds	r30, 0x0305	; 0x800305 <pxDelayedTaskList>
 a06:	f0 91 06 03 	lds	r31, 0x0306	; 0x800306 <pxDelayedTaskList+0x1>
 a0a:	05 80       	ldd	r0, Z+5	; 0x05
 a0c:	f6 81       	ldd	r31, Z+6	; 0x06
 a0e:	e0 2d       	mov	r30, r0
 a10:	c6 81       	ldd	r28, Z+6	; 0x06
 a12:	d7 81       	ldd	r29, Z+7	; 0x07
 a14:	8a 81       	ldd	r24, Y+2	; 0x02
 a16:	9b 81       	ldd	r25, Y+3	; 0x03
 a18:	20 91 01 03 	lds	r18, 0x0301	; 0x800301 <xTickCount>
 a1c:	30 91 02 03 	lds	r19, 0x0302	; 0x800302 <xTickCount+0x1>
 a20:	28 17       	cp	r18, r24
 a22:	39 07       	cpc	r19, r25
 a24:	28 f4       	brcc	.+10     	; 0xa30 <vTaskIncrementTick+0x11c>
 a26:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 a2a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 a2e:	2e c0       	rjmp	.+92     	; 0xa8c <vTaskIncrementTick+0x178>
 a30:	8e 01       	movw	r16, r28
 a32:	0e 5f       	subi	r16, 0xFE	; 254
 a34:	1f 4f       	sbci	r17, 0xFF	; 255
 a36:	c8 01       	movw	r24, r16
 a38:	fc dc       	rcall	.-1544   	; 0x432 <vListRemove>
 a3a:	8c 89       	ldd	r24, Y+20	; 0x14
 a3c:	9d 89       	ldd	r25, Y+21	; 0x15
 a3e:	89 2b       	or	r24, r25
 a40:	19 f0       	breq	.+6      	; 0xa48 <vTaskIncrementTick+0x134>
 a42:	ce 01       	movw	r24, r28
 a44:	0c 96       	adiw	r24, 0x0c	; 12
 a46:	f5 dc       	rcall	.-1558   	; 0x432 <vListRemove>
 a48:	8e 89       	ldd	r24, Y+22	; 0x16
 a4a:	90 91 00 03 	lds	r25, 0x0300	; 0x800300 <uxTopReadyPriority>
 a4e:	98 17       	cp	r25, r24
 a50:	10 f4       	brcc	.+4      	; 0xa56 <vTaskIncrementTick+0x142>
 a52:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <uxTopReadyPriority>
 a56:	90 e0       	ldi	r25, 0x00	; 0
 a58:	9c 01       	movw	r18, r24
 a5a:	22 0f       	add	r18, r18
 a5c:	33 1f       	adc	r19, r19
 a5e:	22 0f       	add	r18, r18
 a60:	33 1f       	adc	r19, r19
 a62:	22 0f       	add	r18, r18
 a64:	33 1f       	adc	r19, r19
 a66:	82 0f       	add	r24, r18
 a68:	93 1f       	adc	r25, r19
 a6a:	b8 01       	movw	r22, r16
 a6c:	89 5f       	subi	r24, 0xF9	; 249
 a6e:	9c 4f       	sbci	r25, 0xFC	; 252
 a70:	b9 dc       	rcall	.-1678   	; 0x3e4 <vListInsertEnd>
 a72:	e0 91 05 03 	lds	r30, 0x0305	; 0x800305 <pxDelayedTaskList>
 a76:	f0 91 06 03 	lds	r31, 0x0306	; 0x800306 <pxDelayedTaskList+0x1>
 a7a:	80 81       	ld	r24, Z
 a7c:	81 11       	cpse	r24, r1
 a7e:	c1 cf       	rjmp	.-126    	; 0xa02 <vTaskIncrementTick+0xee>
 a80:	b9 cf       	rjmp	.-142    	; 0x9f4 <vTaskIncrementTick+0xe0>
 a82:	80 91 fe 02 	lds	r24, 0x02FE	; 0x8002fe <uxMissedTicks>
 a86:	8f 5f       	subi	r24, 0xFF	; 255
 a88:	80 93 fe 02 	sts	0x02FE, r24	; 0x8002fe <uxMissedTicks>
 a8c:	df 91       	pop	r29
 a8e:	cf 91       	pop	r28
 a90:	1f 91       	pop	r17
 a92:	0f 91       	pop	r16
 a94:	08 95       	ret

00000a96 <vTaskSwitchContext>:
#endif
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
 a96:	80 91 ff 02 	lds	r24, 0x02FF	; 0x8002ff <uxSchedulerSuspended>
 a9a:	81 11       	cpse	r24, r1
 a9c:	13 c0       	rjmp	.+38     	; 0xac4 <vTaskSwitchContext+0x2e>
	
		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
	
		/* Find the highest priority queue that contains ready tasks. */
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
 a9e:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <uxTopReadyPriority>
 aa2:	90 e0       	ldi	r25, 0x00	; 0
 aa4:	fc 01       	movw	r30, r24
 aa6:	ee 0f       	add	r30, r30
 aa8:	ff 1f       	adc	r31, r31
 aaa:	ee 0f       	add	r30, r30
 aac:	ff 1f       	adc	r31, r31
 aae:	ee 0f       	add	r30, r30
 ab0:	ff 1f       	adc	r31, r31
 ab2:	8e 0f       	add	r24, r30
 ab4:	9f 1f       	adc	r25, r31
 ab6:	fc 01       	movw	r30, r24
 ab8:	e9 5f       	subi	r30, 0xF9	; 249
 aba:	fc 4f       	sbci	r31, 0xFC	; 252
 abc:	80 81       	ld	r24, Z
 abe:	88 23       	and	r24, r24
 ac0:	29 f0       	breq	.+10     	; 0xacc <vTaskSwitchContext+0x36>
 ac2:	1b c0       	rjmp	.+54     	; 0xafa <vTaskSwitchContext+0x64>
{
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
	{
		/* The scheduler is currently suspended - do not allow a context
		switch. */
		xMissedYield = pdTRUE;
 ac4:	81 e0       	ldi	r24, 0x01	; 1
 ac6:	80 93 fd 02 	sts	0x02FD, r24	; 0x8002fd <xMissedYield>
 aca:	08 95       	ret
	
		/* Find the highest priority queue that contains ready tasks. */
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
		{
			configASSERT( uxTopReadyPriority );
			--uxTopReadyPriority;
 acc:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <uxTopReadyPriority>
 ad0:	81 50       	subi	r24, 0x01	; 1
 ad2:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <uxTopReadyPriority>
	
		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
	
		/* Find the highest priority queue that contains ready tasks. */
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
 ad6:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <uxTopReadyPriority>
 ada:	90 e0       	ldi	r25, 0x00	; 0
 adc:	fc 01       	movw	r30, r24
 ade:	ee 0f       	add	r30, r30
 ae0:	ff 1f       	adc	r31, r31
 ae2:	ee 0f       	add	r30, r30
 ae4:	ff 1f       	adc	r31, r31
 ae6:	ee 0f       	add	r30, r30
 ae8:	ff 1f       	adc	r31, r31
 aea:	8e 0f       	add	r24, r30
 aec:	9f 1f       	adc	r25, r31
 aee:	fc 01       	movw	r30, r24
 af0:	e9 5f       	subi	r30, 0xF9	; 249
 af2:	fc 4f       	sbci	r31, 0xFC	; 252
 af4:	80 81       	ld	r24, Z
 af6:	88 23       	and	r24, r24
 af8:	49 f3       	breq	.-46     	; 0xacc <vTaskSwitchContext+0x36>
			--uxTopReadyPriority;
		}
	
		/* listGET_OWNER_OF_NEXT_ENTRY walks through the list, so the tasks of the
		same priority get an equal share of the processor time. */
		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );
 afa:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <uxTopReadyPriority>
 afe:	90 e0       	ldi	r25, 0x00	; 0
 b00:	9c 01       	movw	r18, r24
 b02:	22 0f       	add	r18, r18
 b04:	33 1f       	adc	r19, r19
 b06:	22 0f       	add	r18, r18
 b08:	33 1f       	adc	r19, r19
 b0a:	22 0f       	add	r18, r18
 b0c:	33 1f       	adc	r19, r19
 b0e:	28 0f       	add	r18, r24
 b10:	39 1f       	adc	r19, r25
 b12:	d9 01       	movw	r26, r18
 b14:	a9 5f       	subi	r26, 0xF9	; 249
 b16:	bc 4f       	sbci	r27, 0xFC	; 252
 b18:	11 96       	adiw	r26, 0x01	; 1
 b1a:	ed 91       	ld	r30, X+
 b1c:	fc 91       	ld	r31, X
 b1e:	12 97       	sbiw	r26, 0x02	; 2
 b20:	02 80       	ldd	r0, Z+2	; 0x02
 b22:	f3 81       	ldd	r31, Z+3	; 0x03
 b24:	e0 2d       	mov	r30, r0
 b26:	12 96       	adiw	r26, 0x02	; 2
 b28:	fc 93       	st	X, r31
 b2a:	ee 93       	st	-X, r30
 b2c:	11 97       	sbiw	r26, 0x01	; 1
 b2e:	26 5f       	subi	r18, 0xF6	; 246
 b30:	3c 4f       	sbci	r19, 0xFC	; 252
 b32:	e2 17       	cp	r30, r18
 b34:	f3 07       	cpc	r31, r19
 b36:	29 f4       	brne	.+10     	; 0xb42 <vTaskSwitchContext+0xac>
 b38:	22 81       	ldd	r18, Z+2	; 0x02
 b3a:	33 81       	ldd	r19, Z+3	; 0x03
 b3c:	fd 01       	movw	r30, r26
 b3e:	32 83       	std	Z+2, r19	; 0x02
 b40:	21 83       	std	Z+1, r18	; 0x01
 b42:	fc 01       	movw	r30, r24
 b44:	ee 0f       	add	r30, r30
 b46:	ff 1f       	adc	r31, r31
 b48:	ee 0f       	add	r30, r30
 b4a:	ff 1f       	adc	r31, r31
 b4c:	ee 0f       	add	r30, r30
 b4e:	ff 1f       	adc	r31, r31
 b50:	8e 0f       	add	r24, r30
 b52:	9f 1f       	adc	r25, r31
 b54:	fc 01       	movw	r30, r24
 b56:	e9 5f       	subi	r30, 0xF9	; 249
 b58:	fc 4f       	sbci	r31, 0xFC	; 252
 b5a:	01 80       	ldd	r0, Z+1	; 0x01
 b5c:	f2 81       	ldd	r31, Z+2	; 0x02
 b5e:	e0 2d       	mov	r30, r0
 b60:	86 81       	ldd	r24, Z+6	; 0x06
 b62:	97 81       	ldd	r25, Z+7	; 0x07
 b64:	90 93 2c 03 	sts	0x032C, r25	; 0x80032c <pxCurrentTCB+0x1>
 b68:	80 93 2b 03 	sts	0x032B, r24	; 0x80032b <pxCurrentTCB>
 b6c:	08 95       	ret

00000b6e <__subsf3>:
 b6e:	50 58       	subi	r21, 0x80	; 128

00000b70 <__addsf3>:
 b70:	bb 27       	eor	r27, r27
 b72:	aa 27       	eor	r26, r26
 b74:	0e d0       	rcall	.+28     	; 0xb92 <__addsf3x>
 b76:	4d c1       	rjmp	.+666    	; 0xe12 <__fp_round>
 b78:	3e d1       	rcall	.+636    	; 0xdf6 <__fp_pscA>
 b7a:	30 f0       	brcs	.+12     	; 0xb88 <__addsf3+0x18>
 b7c:	43 d1       	rcall	.+646    	; 0xe04 <__fp_pscB>
 b7e:	20 f0       	brcs	.+8      	; 0xb88 <__addsf3+0x18>
 b80:	31 f4       	brne	.+12     	; 0xb8e <__addsf3+0x1e>
 b82:	9f 3f       	cpi	r25, 0xFF	; 255
 b84:	11 f4       	brne	.+4      	; 0xb8a <__addsf3+0x1a>
 b86:	1e f4       	brtc	.+6      	; 0xb8e <__addsf3+0x1e>
 b88:	33 c1       	rjmp	.+614    	; 0xdf0 <__fp_nan>
 b8a:	0e f4       	brtc	.+2      	; 0xb8e <__addsf3+0x1e>
 b8c:	e0 95       	com	r30
 b8e:	e7 fb       	bst	r30, 7
 b90:	29 c1       	rjmp	.+594    	; 0xde4 <__fp_inf>

00000b92 <__addsf3x>:
 b92:	e9 2f       	mov	r30, r25
 b94:	4f d1       	rcall	.+670    	; 0xe34 <__fp_split3>
 b96:	80 f3       	brcs	.-32     	; 0xb78 <__addsf3+0x8>
 b98:	ba 17       	cp	r27, r26
 b9a:	62 07       	cpc	r22, r18
 b9c:	73 07       	cpc	r23, r19
 b9e:	84 07       	cpc	r24, r20
 ba0:	95 07       	cpc	r25, r21
 ba2:	18 f0       	brcs	.+6      	; 0xbaa <__addsf3x+0x18>
 ba4:	71 f4       	brne	.+28     	; 0xbc2 <__addsf3x+0x30>
 ba6:	9e f5       	brtc	.+102    	; 0xc0e <__addsf3x+0x7c>
 ba8:	67 c1       	rjmp	.+718    	; 0xe78 <__fp_zero>
 baa:	0e f4       	brtc	.+2      	; 0xbae <__addsf3x+0x1c>
 bac:	e0 95       	com	r30
 bae:	0b 2e       	mov	r0, r27
 bb0:	ba 2f       	mov	r27, r26
 bb2:	a0 2d       	mov	r26, r0
 bb4:	0b 01       	movw	r0, r22
 bb6:	b9 01       	movw	r22, r18
 bb8:	90 01       	movw	r18, r0
 bba:	0c 01       	movw	r0, r24
 bbc:	ca 01       	movw	r24, r20
 bbe:	a0 01       	movw	r20, r0
 bc0:	11 24       	eor	r1, r1
 bc2:	ff 27       	eor	r31, r31
 bc4:	59 1b       	sub	r21, r25
 bc6:	99 f0       	breq	.+38     	; 0xbee <__addsf3x+0x5c>
 bc8:	59 3f       	cpi	r21, 0xF9	; 249
 bca:	50 f4       	brcc	.+20     	; 0xbe0 <__addsf3x+0x4e>
 bcc:	50 3e       	cpi	r21, 0xE0	; 224
 bce:	68 f1       	brcs	.+90     	; 0xc2a <__addsf3x+0x98>
 bd0:	1a 16       	cp	r1, r26
 bd2:	f0 40       	sbci	r31, 0x00	; 0
 bd4:	a2 2f       	mov	r26, r18
 bd6:	23 2f       	mov	r18, r19
 bd8:	34 2f       	mov	r19, r20
 bda:	44 27       	eor	r20, r20
 bdc:	58 5f       	subi	r21, 0xF8	; 248
 bde:	f3 cf       	rjmp	.-26     	; 0xbc6 <__addsf3x+0x34>
 be0:	46 95       	lsr	r20
 be2:	37 95       	ror	r19
 be4:	27 95       	ror	r18
 be6:	a7 95       	ror	r26
 be8:	f0 40       	sbci	r31, 0x00	; 0
 bea:	53 95       	inc	r21
 bec:	c9 f7       	brne	.-14     	; 0xbe0 <__addsf3x+0x4e>
 bee:	7e f4       	brtc	.+30     	; 0xc0e <__addsf3x+0x7c>
 bf0:	1f 16       	cp	r1, r31
 bf2:	ba 0b       	sbc	r27, r26
 bf4:	62 0b       	sbc	r22, r18
 bf6:	73 0b       	sbc	r23, r19
 bf8:	84 0b       	sbc	r24, r20
 bfa:	ba f0       	brmi	.+46     	; 0xc2a <__addsf3x+0x98>
 bfc:	91 50       	subi	r25, 0x01	; 1
 bfe:	a1 f0       	breq	.+40     	; 0xc28 <__addsf3x+0x96>
 c00:	ff 0f       	add	r31, r31
 c02:	bb 1f       	adc	r27, r27
 c04:	66 1f       	adc	r22, r22
 c06:	77 1f       	adc	r23, r23
 c08:	88 1f       	adc	r24, r24
 c0a:	c2 f7       	brpl	.-16     	; 0xbfc <__addsf3x+0x6a>
 c0c:	0e c0       	rjmp	.+28     	; 0xc2a <__addsf3x+0x98>
 c0e:	ba 0f       	add	r27, r26
 c10:	62 1f       	adc	r22, r18
 c12:	73 1f       	adc	r23, r19
 c14:	84 1f       	adc	r24, r20
 c16:	48 f4       	brcc	.+18     	; 0xc2a <__addsf3x+0x98>
 c18:	87 95       	ror	r24
 c1a:	77 95       	ror	r23
 c1c:	67 95       	ror	r22
 c1e:	b7 95       	ror	r27
 c20:	f7 95       	ror	r31
 c22:	9e 3f       	cpi	r25, 0xFE	; 254
 c24:	08 f0       	brcs	.+2      	; 0xc28 <__addsf3x+0x96>
 c26:	b3 cf       	rjmp	.-154    	; 0xb8e <__addsf3+0x1e>
 c28:	93 95       	inc	r25
 c2a:	88 0f       	add	r24, r24
 c2c:	08 f0       	brcs	.+2      	; 0xc30 <__addsf3x+0x9e>
 c2e:	99 27       	eor	r25, r25
 c30:	ee 0f       	add	r30, r30
 c32:	97 95       	ror	r25
 c34:	87 95       	ror	r24
 c36:	08 95       	ret

00000c38 <__divsf3>:
 c38:	0c d0       	rcall	.+24     	; 0xc52 <__divsf3x>
 c3a:	eb c0       	rjmp	.+470    	; 0xe12 <__fp_round>
 c3c:	e3 d0       	rcall	.+454    	; 0xe04 <__fp_pscB>
 c3e:	40 f0       	brcs	.+16     	; 0xc50 <__divsf3+0x18>
 c40:	da d0       	rcall	.+436    	; 0xdf6 <__fp_pscA>
 c42:	30 f0       	brcs	.+12     	; 0xc50 <__divsf3+0x18>
 c44:	21 f4       	brne	.+8      	; 0xc4e <__divsf3+0x16>
 c46:	5f 3f       	cpi	r21, 0xFF	; 255
 c48:	19 f0       	breq	.+6      	; 0xc50 <__divsf3+0x18>
 c4a:	cc c0       	rjmp	.+408    	; 0xde4 <__fp_inf>
 c4c:	51 11       	cpse	r21, r1
 c4e:	15 c1       	rjmp	.+554    	; 0xe7a <__fp_szero>
 c50:	cf c0       	rjmp	.+414    	; 0xdf0 <__fp_nan>

00000c52 <__divsf3x>:
 c52:	f0 d0       	rcall	.+480    	; 0xe34 <__fp_split3>
 c54:	98 f3       	brcs	.-26     	; 0xc3c <__divsf3+0x4>

00000c56 <__divsf3_pse>:
 c56:	99 23       	and	r25, r25
 c58:	c9 f3       	breq	.-14     	; 0xc4c <__divsf3+0x14>
 c5a:	55 23       	and	r21, r21
 c5c:	b1 f3       	breq	.-20     	; 0xc4a <__divsf3+0x12>
 c5e:	95 1b       	sub	r25, r21
 c60:	55 0b       	sbc	r21, r21
 c62:	bb 27       	eor	r27, r27
 c64:	aa 27       	eor	r26, r26
 c66:	62 17       	cp	r22, r18
 c68:	73 07       	cpc	r23, r19
 c6a:	84 07       	cpc	r24, r20
 c6c:	38 f0       	brcs	.+14     	; 0xc7c <__divsf3_pse+0x26>
 c6e:	9f 5f       	subi	r25, 0xFF	; 255
 c70:	5f 4f       	sbci	r21, 0xFF	; 255
 c72:	22 0f       	add	r18, r18
 c74:	33 1f       	adc	r19, r19
 c76:	44 1f       	adc	r20, r20
 c78:	aa 1f       	adc	r26, r26
 c7a:	a9 f3       	breq	.-22     	; 0xc66 <__divsf3_pse+0x10>
 c7c:	33 d0       	rcall	.+102    	; 0xce4 <__divsf3_pse+0x8e>
 c7e:	0e 2e       	mov	r0, r30
 c80:	3a f0       	brmi	.+14     	; 0xc90 <__divsf3_pse+0x3a>
 c82:	e0 e8       	ldi	r30, 0x80	; 128
 c84:	30 d0       	rcall	.+96     	; 0xce6 <__divsf3_pse+0x90>
 c86:	91 50       	subi	r25, 0x01	; 1
 c88:	50 40       	sbci	r21, 0x00	; 0
 c8a:	e6 95       	lsr	r30
 c8c:	00 1c       	adc	r0, r0
 c8e:	ca f7       	brpl	.-14     	; 0xc82 <__divsf3_pse+0x2c>
 c90:	29 d0       	rcall	.+82     	; 0xce4 <__divsf3_pse+0x8e>
 c92:	fe 2f       	mov	r31, r30
 c94:	27 d0       	rcall	.+78     	; 0xce4 <__divsf3_pse+0x8e>
 c96:	66 0f       	add	r22, r22
 c98:	77 1f       	adc	r23, r23
 c9a:	88 1f       	adc	r24, r24
 c9c:	bb 1f       	adc	r27, r27
 c9e:	26 17       	cp	r18, r22
 ca0:	37 07       	cpc	r19, r23
 ca2:	48 07       	cpc	r20, r24
 ca4:	ab 07       	cpc	r26, r27
 ca6:	b0 e8       	ldi	r27, 0x80	; 128
 ca8:	09 f0       	breq	.+2      	; 0xcac <__divsf3_pse+0x56>
 caa:	bb 0b       	sbc	r27, r27
 cac:	80 2d       	mov	r24, r0
 cae:	bf 01       	movw	r22, r30
 cb0:	ff 27       	eor	r31, r31
 cb2:	93 58       	subi	r25, 0x83	; 131
 cb4:	5f 4f       	sbci	r21, 0xFF	; 255
 cb6:	2a f0       	brmi	.+10     	; 0xcc2 <__divsf3_pse+0x6c>
 cb8:	9e 3f       	cpi	r25, 0xFE	; 254
 cba:	51 05       	cpc	r21, r1
 cbc:	68 f0       	brcs	.+26     	; 0xcd8 <__divsf3_pse+0x82>
 cbe:	92 c0       	rjmp	.+292    	; 0xde4 <__fp_inf>
 cc0:	dc c0       	rjmp	.+440    	; 0xe7a <__fp_szero>
 cc2:	5f 3f       	cpi	r21, 0xFF	; 255
 cc4:	ec f3       	brlt	.-6      	; 0xcc0 <__divsf3_pse+0x6a>
 cc6:	98 3e       	cpi	r25, 0xE8	; 232
 cc8:	dc f3       	brlt	.-10     	; 0xcc0 <__divsf3_pse+0x6a>
 cca:	86 95       	lsr	r24
 ccc:	77 95       	ror	r23
 cce:	67 95       	ror	r22
 cd0:	b7 95       	ror	r27
 cd2:	f7 95       	ror	r31
 cd4:	9f 5f       	subi	r25, 0xFF	; 255
 cd6:	c9 f7       	brne	.-14     	; 0xcca <__divsf3_pse+0x74>
 cd8:	88 0f       	add	r24, r24
 cda:	91 1d       	adc	r25, r1
 cdc:	96 95       	lsr	r25
 cde:	87 95       	ror	r24
 ce0:	97 f9       	bld	r25, 7
 ce2:	08 95       	ret
 ce4:	e1 e0       	ldi	r30, 0x01	; 1
 ce6:	66 0f       	add	r22, r22
 ce8:	77 1f       	adc	r23, r23
 cea:	88 1f       	adc	r24, r24
 cec:	bb 1f       	adc	r27, r27
 cee:	62 17       	cp	r22, r18
 cf0:	73 07       	cpc	r23, r19
 cf2:	84 07       	cpc	r24, r20
 cf4:	ba 07       	cpc	r27, r26
 cf6:	20 f0       	brcs	.+8      	; 0xd00 <__divsf3_pse+0xaa>
 cf8:	62 1b       	sub	r22, r18
 cfa:	73 0b       	sbc	r23, r19
 cfc:	84 0b       	sbc	r24, r20
 cfe:	ba 0b       	sbc	r27, r26
 d00:	ee 1f       	adc	r30, r30
 d02:	88 f7       	brcc	.-30     	; 0xce6 <__divsf3_pse+0x90>
 d04:	e0 95       	com	r30
 d06:	08 95       	ret

00000d08 <__fixsfsi>:
 d08:	04 d0       	rcall	.+8      	; 0xd12 <__fixunssfsi>
 d0a:	68 94       	set
 d0c:	b1 11       	cpse	r27, r1
 d0e:	b5 c0       	rjmp	.+362    	; 0xe7a <__fp_szero>
 d10:	08 95       	ret

00000d12 <__fixunssfsi>:
 d12:	98 d0       	rcall	.+304    	; 0xe44 <__fp_splitA>
 d14:	88 f0       	brcs	.+34     	; 0xd38 <__fixunssfsi+0x26>
 d16:	9f 57       	subi	r25, 0x7F	; 127
 d18:	90 f0       	brcs	.+36     	; 0xd3e <__fixunssfsi+0x2c>
 d1a:	b9 2f       	mov	r27, r25
 d1c:	99 27       	eor	r25, r25
 d1e:	b7 51       	subi	r27, 0x17	; 23
 d20:	a0 f0       	brcs	.+40     	; 0xd4a <__fixunssfsi+0x38>
 d22:	d1 f0       	breq	.+52     	; 0xd58 <__fixunssfsi+0x46>
 d24:	66 0f       	add	r22, r22
 d26:	77 1f       	adc	r23, r23
 d28:	88 1f       	adc	r24, r24
 d2a:	99 1f       	adc	r25, r25
 d2c:	1a f0       	brmi	.+6      	; 0xd34 <__fixunssfsi+0x22>
 d2e:	ba 95       	dec	r27
 d30:	c9 f7       	brne	.-14     	; 0xd24 <__fixunssfsi+0x12>
 d32:	12 c0       	rjmp	.+36     	; 0xd58 <__fixunssfsi+0x46>
 d34:	b1 30       	cpi	r27, 0x01	; 1
 d36:	81 f0       	breq	.+32     	; 0xd58 <__fixunssfsi+0x46>
 d38:	9f d0       	rcall	.+318    	; 0xe78 <__fp_zero>
 d3a:	b1 e0       	ldi	r27, 0x01	; 1
 d3c:	08 95       	ret
 d3e:	9c c0       	rjmp	.+312    	; 0xe78 <__fp_zero>
 d40:	67 2f       	mov	r22, r23
 d42:	78 2f       	mov	r23, r24
 d44:	88 27       	eor	r24, r24
 d46:	b8 5f       	subi	r27, 0xF8	; 248
 d48:	39 f0       	breq	.+14     	; 0xd58 <__fixunssfsi+0x46>
 d4a:	b9 3f       	cpi	r27, 0xF9	; 249
 d4c:	cc f3       	brlt	.-14     	; 0xd40 <__fixunssfsi+0x2e>
 d4e:	86 95       	lsr	r24
 d50:	77 95       	ror	r23
 d52:	67 95       	ror	r22
 d54:	b3 95       	inc	r27
 d56:	d9 f7       	brne	.-10     	; 0xd4e <__fixunssfsi+0x3c>
 d58:	3e f4       	brtc	.+14     	; 0xd68 <__fixunssfsi+0x56>
 d5a:	90 95       	com	r25
 d5c:	80 95       	com	r24
 d5e:	70 95       	com	r23
 d60:	61 95       	neg	r22
 d62:	7f 4f       	sbci	r23, 0xFF	; 255
 d64:	8f 4f       	sbci	r24, 0xFF	; 255
 d66:	9f 4f       	sbci	r25, 0xFF	; 255
 d68:	08 95       	ret

00000d6a <__floatunsisf>:
 d6a:	e8 94       	clt
 d6c:	09 c0       	rjmp	.+18     	; 0xd80 <__floatsisf+0x12>

00000d6e <__floatsisf>:
 d6e:	97 fb       	bst	r25, 7
 d70:	3e f4       	brtc	.+14     	; 0xd80 <__floatsisf+0x12>
 d72:	90 95       	com	r25
 d74:	80 95       	com	r24
 d76:	70 95       	com	r23
 d78:	61 95       	neg	r22
 d7a:	7f 4f       	sbci	r23, 0xFF	; 255
 d7c:	8f 4f       	sbci	r24, 0xFF	; 255
 d7e:	9f 4f       	sbci	r25, 0xFF	; 255
 d80:	99 23       	and	r25, r25
 d82:	a9 f0       	breq	.+42     	; 0xdae <__floatsisf+0x40>
 d84:	f9 2f       	mov	r31, r25
 d86:	96 e9       	ldi	r25, 0x96	; 150
 d88:	bb 27       	eor	r27, r27
 d8a:	93 95       	inc	r25
 d8c:	f6 95       	lsr	r31
 d8e:	87 95       	ror	r24
 d90:	77 95       	ror	r23
 d92:	67 95       	ror	r22
 d94:	b7 95       	ror	r27
 d96:	f1 11       	cpse	r31, r1
 d98:	f8 cf       	rjmp	.-16     	; 0xd8a <__floatsisf+0x1c>
 d9a:	fa f4       	brpl	.+62     	; 0xdda <__floatsisf+0x6c>
 d9c:	bb 0f       	add	r27, r27
 d9e:	11 f4       	brne	.+4      	; 0xda4 <__floatsisf+0x36>
 da0:	60 ff       	sbrs	r22, 0
 da2:	1b c0       	rjmp	.+54     	; 0xdda <__floatsisf+0x6c>
 da4:	6f 5f       	subi	r22, 0xFF	; 255
 da6:	7f 4f       	sbci	r23, 0xFF	; 255
 da8:	8f 4f       	sbci	r24, 0xFF	; 255
 daa:	9f 4f       	sbci	r25, 0xFF	; 255
 dac:	16 c0       	rjmp	.+44     	; 0xdda <__floatsisf+0x6c>
 dae:	88 23       	and	r24, r24
 db0:	11 f0       	breq	.+4      	; 0xdb6 <__floatsisf+0x48>
 db2:	96 e9       	ldi	r25, 0x96	; 150
 db4:	11 c0       	rjmp	.+34     	; 0xdd8 <__floatsisf+0x6a>
 db6:	77 23       	and	r23, r23
 db8:	21 f0       	breq	.+8      	; 0xdc2 <__floatsisf+0x54>
 dba:	9e e8       	ldi	r25, 0x8E	; 142
 dbc:	87 2f       	mov	r24, r23
 dbe:	76 2f       	mov	r23, r22
 dc0:	05 c0       	rjmp	.+10     	; 0xdcc <__floatsisf+0x5e>
 dc2:	66 23       	and	r22, r22
 dc4:	71 f0       	breq	.+28     	; 0xde2 <__floatsisf+0x74>
 dc6:	96 e8       	ldi	r25, 0x86	; 134
 dc8:	86 2f       	mov	r24, r22
 dca:	70 e0       	ldi	r23, 0x00	; 0
 dcc:	60 e0       	ldi	r22, 0x00	; 0
 dce:	2a f0       	brmi	.+10     	; 0xdda <__floatsisf+0x6c>
 dd0:	9a 95       	dec	r25
 dd2:	66 0f       	add	r22, r22
 dd4:	77 1f       	adc	r23, r23
 dd6:	88 1f       	adc	r24, r24
 dd8:	da f7       	brpl	.-10     	; 0xdd0 <__floatsisf+0x62>
 dda:	88 0f       	add	r24, r24
 ddc:	96 95       	lsr	r25
 dde:	87 95       	ror	r24
 de0:	97 f9       	bld	r25, 7
 de2:	08 95       	ret

00000de4 <__fp_inf>:
 de4:	97 f9       	bld	r25, 7
 de6:	9f 67       	ori	r25, 0x7F	; 127
 de8:	80 e8       	ldi	r24, 0x80	; 128
 dea:	70 e0       	ldi	r23, 0x00	; 0
 dec:	60 e0       	ldi	r22, 0x00	; 0
 dee:	08 95       	ret

00000df0 <__fp_nan>:
 df0:	9f ef       	ldi	r25, 0xFF	; 255
 df2:	80 ec       	ldi	r24, 0xC0	; 192
 df4:	08 95       	ret

00000df6 <__fp_pscA>:
 df6:	00 24       	eor	r0, r0
 df8:	0a 94       	dec	r0
 dfa:	16 16       	cp	r1, r22
 dfc:	17 06       	cpc	r1, r23
 dfe:	18 06       	cpc	r1, r24
 e00:	09 06       	cpc	r0, r25
 e02:	08 95       	ret

00000e04 <__fp_pscB>:
 e04:	00 24       	eor	r0, r0
 e06:	0a 94       	dec	r0
 e08:	12 16       	cp	r1, r18
 e0a:	13 06       	cpc	r1, r19
 e0c:	14 06       	cpc	r1, r20
 e0e:	05 06       	cpc	r0, r21
 e10:	08 95       	ret

00000e12 <__fp_round>:
 e12:	09 2e       	mov	r0, r25
 e14:	03 94       	inc	r0
 e16:	00 0c       	add	r0, r0
 e18:	11 f4       	brne	.+4      	; 0xe1e <__fp_round+0xc>
 e1a:	88 23       	and	r24, r24
 e1c:	52 f0       	brmi	.+20     	; 0xe32 <__fp_round+0x20>
 e1e:	bb 0f       	add	r27, r27
 e20:	40 f4       	brcc	.+16     	; 0xe32 <__fp_round+0x20>
 e22:	bf 2b       	or	r27, r31
 e24:	11 f4       	brne	.+4      	; 0xe2a <__fp_round+0x18>
 e26:	60 ff       	sbrs	r22, 0
 e28:	04 c0       	rjmp	.+8      	; 0xe32 <__fp_round+0x20>
 e2a:	6f 5f       	subi	r22, 0xFF	; 255
 e2c:	7f 4f       	sbci	r23, 0xFF	; 255
 e2e:	8f 4f       	sbci	r24, 0xFF	; 255
 e30:	9f 4f       	sbci	r25, 0xFF	; 255
 e32:	08 95       	ret

00000e34 <__fp_split3>:
 e34:	57 fd       	sbrc	r21, 7
 e36:	90 58       	subi	r25, 0x80	; 128
 e38:	44 0f       	add	r20, r20
 e3a:	55 1f       	adc	r21, r21
 e3c:	59 f0       	breq	.+22     	; 0xe54 <__fp_splitA+0x10>
 e3e:	5f 3f       	cpi	r21, 0xFF	; 255
 e40:	71 f0       	breq	.+28     	; 0xe5e <__fp_splitA+0x1a>
 e42:	47 95       	ror	r20

00000e44 <__fp_splitA>:
 e44:	88 0f       	add	r24, r24
 e46:	97 fb       	bst	r25, 7
 e48:	99 1f       	adc	r25, r25
 e4a:	61 f0       	breq	.+24     	; 0xe64 <__fp_splitA+0x20>
 e4c:	9f 3f       	cpi	r25, 0xFF	; 255
 e4e:	79 f0       	breq	.+30     	; 0xe6e <__fp_splitA+0x2a>
 e50:	87 95       	ror	r24
 e52:	08 95       	ret
 e54:	12 16       	cp	r1, r18
 e56:	13 06       	cpc	r1, r19
 e58:	14 06       	cpc	r1, r20
 e5a:	55 1f       	adc	r21, r21
 e5c:	f2 cf       	rjmp	.-28     	; 0xe42 <__fp_split3+0xe>
 e5e:	46 95       	lsr	r20
 e60:	f1 df       	rcall	.-30     	; 0xe44 <__fp_splitA>
 e62:	08 c0       	rjmp	.+16     	; 0xe74 <__fp_splitA+0x30>
 e64:	16 16       	cp	r1, r22
 e66:	17 06       	cpc	r1, r23
 e68:	18 06       	cpc	r1, r24
 e6a:	99 1f       	adc	r25, r25
 e6c:	f1 cf       	rjmp	.-30     	; 0xe50 <__fp_splitA+0xc>
 e6e:	86 95       	lsr	r24
 e70:	71 05       	cpc	r23, r1
 e72:	61 05       	cpc	r22, r1
 e74:	08 94       	sec
 e76:	08 95       	ret

00000e78 <__fp_zero>:
 e78:	e8 94       	clt

00000e7a <__fp_szero>:
 e7a:	bb 27       	eor	r27, r27
 e7c:	66 27       	eor	r22, r22
 e7e:	77 27       	eor	r23, r23
 e80:	cb 01       	movw	r24, r22
 e82:	97 f9       	bld	r25, 7
 e84:	08 95       	ret

00000e86 <__udivmodqi4>:
 e86:	99 1b       	sub	r25, r25
 e88:	79 e0       	ldi	r23, 0x09	; 9
 e8a:	04 c0       	rjmp	.+8      	; 0xe94 <__udivmodqi4_ep>

00000e8c <__udivmodqi4_loop>:
 e8c:	99 1f       	adc	r25, r25
 e8e:	96 17       	cp	r25, r22
 e90:	08 f0       	brcs	.+2      	; 0xe94 <__udivmodqi4_ep>
 e92:	96 1b       	sub	r25, r22

00000e94 <__udivmodqi4_ep>:
 e94:	88 1f       	adc	r24, r24
 e96:	7a 95       	dec	r23
 e98:	c9 f7       	brne	.-14     	; 0xe8c <__udivmodqi4_loop>
 e9a:	80 95       	com	r24
 e9c:	08 95       	ret

00000e9e <__udivmodsi4>:
 e9e:	a1 e2       	ldi	r26, 0x21	; 33
 ea0:	1a 2e       	mov	r1, r26
 ea2:	aa 1b       	sub	r26, r26
 ea4:	bb 1b       	sub	r27, r27
 ea6:	fd 01       	movw	r30, r26
 ea8:	0d c0       	rjmp	.+26     	; 0xec4 <__udivmodsi4_ep>

00000eaa <__udivmodsi4_loop>:
 eaa:	aa 1f       	adc	r26, r26
 eac:	bb 1f       	adc	r27, r27
 eae:	ee 1f       	adc	r30, r30
 eb0:	ff 1f       	adc	r31, r31
 eb2:	a2 17       	cp	r26, r18
 eb4:	b3 07       	cpc	r27, r19
 eb6:	e4 07       	cpc	r30, r20
 eb8:	f5 07       	cpc	r31, r21
 eba:	20 f0       	brcs	.+8      	; 0xec4 <__udivmodsi4_ep>
 ebc:	a2 1b       	sub	r26, r18
 ebe:	b3 0b       	sbc	r27, r19
 ec0:	e4 0b       	sbc	r30, r20
 ec2:	f5 0b       	sbc	r31, r21

00000ec4 <__udivmodsi4_ep>:
 ec4:	66 1f       	adc	r22, r22
 ec6:	77 1f       	adc	r23, r23
 ec8:	88 1f       	adc	r24, r24
 eca:	99 1f       	adc	r25, r25
 ecc:	1a 94       	dec	r1
 ece:	69 f7       	brne	.-38     	; 0xeaa <__udivmodsi4_loop>
 ed0:	60 95       	com	r22
 ed2:	70 95       	com	r23
 ed4:	80 95       	com	r24
 ed6:	90 95       	com	r25
 ed8:	9b 01       	movw	r18, r22
 eda:	ac 01       	movw	r20, r24
 edc:	bd 01       	movw	r22, r26
 ede:	cf 01       	movw	r24, r30
 ee0:	08 95       	ret

00000ee2 <__divmodsi4>:
 ee2:	05 2e       	mov	r0, r21
 ee4:	97 fb       	bst	r25, 7
 ee6:	16 f4       	brtc	.+4      	; 0xeec <__divmodsi4+0xa>
 ee8:	00 94       	com	r0
 eea:	0f d0       	rcall	.+30     	; 0xf0a <__negsi2>
 eec:	57 fd       	sbrc	r21, 7
 eee:	05 d0       	rcall	.+10     	; 0xefa <__divmodsi4_neg2>
 ef0:	d6 df       	rcall	.-84     	; 0xe9e <__udivmodsi4>
 ef2:	07 fc       	sbrc	r0, 7
 ef4:	02 d0       	rcall	.+4      	; 0xefa <__divmodsi4_neg2>
 ef6:	46 f4       	brtc	.+16     	; 0xf08 <__divmodsi4_exit>
 ef8:	08 c0       	rjmp	.+16     	; 0xf0a <__negsi2>

00000efa <__divmodsi4_neg2>:
 efa:	50 95       	com	r21
 efc:	40 95       	com	r20
 efe:	30 95       	com	r19
 f00:	21 95       	neg	r18
 f02:	3f 4f       	sbci	r19, 0xFF	; 255
 f04:	4f 4f       	sbci	r20, 0xFF	; 255
 f06:	5f 4f       	sbci	r21, 0xFF	; 255

00000f08 <__divmodsi4_exit>:
 f08:	08 95       	ret

00000f0a <__negsi2>:
 f0a:	90 95       	com	r25
 f0c:	80 95       	com	r24
 f0e:	70 95       	com	r23
 f10:	61 95       	neg	r22
 f12:	7f 4f       	sbci	r23, 0xFF	; 255
 f14:	8f 4f       	sbci	r24, 0xFF	; 255
 f16:	9f 4f       	sbci	r25, 0xFF	; 255
 f18:	08 95       	ret

00000f1a <_exit>:
 f1a:	f8 94       	cli

00000f1c <__stop_program>:
 f1c:	ff cf       	rjmp	.-2      	; 0xf1c <__stop_program>
