
Keypad2Nokia5110.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  0000081e  000008b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000081e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001fa  00800106  00800106  000008b8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008b8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000928  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010e8  00000000  00000000  000009d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a9d  00000000  00000000  00001ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000893  00000000  00000000  00002555  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001ac  00000000  00000000  00002de8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000635  00000000  00000000  00002f94  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006c1  00000000  00000000  000035c9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00003c8a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	35 c1       	rjmp	.+618    	; 0x26c <__ctors_end>
   2:	00 00       	nop
   4:	50 c1       	rjmp	.+672    	; 0x2a6 <__bad_interrupt>
   6:	00 00       	nop
   8:	4e c1       	rjmp	.+668    	; 0x2a6 <__bad_interrupt>
   a:	00 00       	nop
   c:	4c c1       	rjmp	.+664    	; 0x2a6 <__bad_interrupt>
   e:	00 00       	nop
  10:	4a c1       	rjmp	.+660    	; 0x2a6 <__bad_interrupt>
  12:	00 00       	nop
  14:	48 c1       	rjmp	.+656    	; 0x2a6 <__bad_interrupt>
  16:	00 00       	nop
  18:	46 c1       	rjmp	.+652    	; 0x2a6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	44 c1       	rjmp	.+648    	; 0x2a6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	42 c1       	rjmp	.+644    	; 0x2a6 <__bad_interrupt>
  22:	00 00       	nop
  24:	40 c1       	rjmp	.+640    	; 0x2a6 <__bad_interrupt>
  26:	00 00       	nop
  28:	3e c1       	rjmp	.+636    	; 0x2a6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3c c1       	rjmp	.+632    	; 0x2a6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	3a c1       	rjmp	.+628    	; 0x2a6 <__bad_interrupt>
  32:	00 00       	nop
  34:	38 c1       	rjmp	.+624    	; 0x2a6 <__bad_interrupt>
  36:	00 00       	nop
  38:	36 c1       	rjmp	.+620    	; 0x2a6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	34 c1       	rjmp	.+616    	; 0x2a6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	32 c1       	rjmp	.+612    	; 0x2a6 <__bad_interrupt>
  42:	00 00       	nop
  44:	30 c1       	rjmp	.+608    	; 0x2a6 <__bad_interrupt>
  46:	00 00       	nop
  48:	2e c1       	rjmp	.+604    	; 0x2a6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2c c1       	rjmp	.+600    	; 0x2a6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	2a c1       	rjmp	.+596    	; 0x2a6 <__bad_interrupt>
  52:	00 00       	nop
  54:	28 c1       	rjmp	.+592    	; 0x2a6 <__bad_interrupt>
  56:	00 00       	nop
  58:	26 c1       	rjmp	.+588    	; 0x2a6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	24 c1       	rjmp	.+584    	; 0x2a6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	22 c1       	rjmp	.+580    	; 0x2a6 <__bad_interrupt>
  62:	00 00       	nop
  64:	20 c1       	rjmp	.+576    	; 0x2a6 <__bad_interrupt>
  66:	00 00       	nop
  68:	1e c1       	rjmp	.+572    	; 0x2a6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1c c1       	rjmp	.+568    	; 0x2a6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	1a c1       	rjmp	.+564    	; 0x2a6 <__bad_interrupt>
  72:	00 00       	nop
  74:	18 c1       	rjmp	.+560    	; 0x2a6 <__bad_interrupt>
  76:	00 00       	nop
  78:	16 c1       	rjmp	.+556    	; 0x2a6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	14 c1       	rjmp	.+552    	; 0x2a6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	12 c1       	rjmp	.+548    	; 0x2a6 <__bad_interrupt>
  82:	00 00       	nop
  84:	10 c1       	rjmp	.+544    	; 0x2a6 <__bad_interrupt>
  86:	00 00       	nop
  88:	0e c1       	rjmp	.+540    	; 0x2a6 <__bad_interrupt>
	...

0000008c <CHARSET>:
  8c:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
  9c:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
  ac:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
  bc:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
  cc:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
  dc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
  ec:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
  fc:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
 10c:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
 11c:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
 12c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
 13c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
 14c:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
 15c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
 16c:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 17c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
 18c:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
 19c:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
 1ac:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
 1bc:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
 1cc:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
 1dc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
 1ec:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
 1fc:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
 20c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
 21c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
 22c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
 23c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
 24c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
 25c:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

0000026c <__ctors_end>:
 26c:	11 24       	eor	r1, r1
 26e:	1f be       	out	0x3f, r1	; 63
 270:	cf ef       	ldi	r28, 0xFF	; 255
 272:	d0 e4       	ldi	r29, 0x40	; 64
 274:	de bf       	out	0x3e, r29	; 62
 276:	cd bf       	out	0x3d, r28	; 61

00000278 <__do_copy_data>:
 278:	11 e0       	ldi	r17, 0x01	; 1
 27a:	a0 e0       	ldi	r26, 0x00	; 0
 27c:	b1 e0       	ldi	r27, 0x01	; 1
 27e:	ee e1       	ldi	r30, 0x1E	; 30
 280:	f8 e0       	ldi	r31, 0x08	; 8
 282:	00 e0       	ldi	r16, 0x00	; 0
 284:	0b bf       	out	0x3b, r16	; 59
 286:	02 c0       	rjmp	.+4      	; 0x28c <__do_copy_data+0x14>
 288:	07 90       	elpm	r0, Z+
 28a:	0d 92       	st	X+, r0
 28c:	a6 30       	cpi	r26, 0x06	; 6
 28e:	b1 07       	cpc	r27, r17
 290:	d9 f7       	brne	.-10     	; 0x288 <__do_copy_data+0x10>

00000292 <__do_clear_bss>:
 292:	23 e0       	ldi	r18, 0x03	; 3
 294:	a6 e0       	ldi	r26, 0x06	; 6
 296:	b1 e0       	ldi	r27, 0x01	; 1
 298:	01 c0       	rjmp	.+2      	; 0x29c <.do_clear_bss_start>

0000029a <.do_clear_bss_loop>:
 29a:	1d 92       	st	X+, r1

0000029c <.do_clear_bss_start>:
 29c:	a0 30       	cpi	r26, 0x00	; 0
 29e:	b2 07       	cpc	r27, r18
 2a0:	e1 f7       	brne	.-8      	; 0x29a <.do_clear_bss_loop>
 2a2:	70 d0       	rcall	.+224    	; 0x384 <main>
 2a4:	ba c2       	rjmp	.+1396   	; 0x81a <_exit>

000002a6 <__bad_interrupt>:
 2a6:	ac ce       	rjmp	.-680    	; 0x0 <__vectors>

000002a8 <GetKeypadKey>:
//Parameter: None
//Returns: A keypad button press else '\0'
unsigned char GetKeypadKey() {

	// Check keys in col 1
	KEYPADPORT = 0xFE; // Set Px0 to 0; others 1
 2a8:	8e ef       	ldi	r24, 0xFE	; 254
 2aa:	88 b9       	out	0x08, r24	; 8
	asm("nop"); // add a delay to allow PORTx to stabilize before checking
 2ac:	00 00       	nop
	if ( GetBit(~KEYPADPIN,ROW1) ) { return '1'; }
 2ae:	86 b1       	in	r24, 0x06	; 6
 2b0:	80 95       	com	r24
 2b2:	84 fd       	sbrc	r24, 4
 2b4:	46 c0       	rjmp	.+140    	; 0x342 <GetKeypadKey+0x9a>
	if ( GetBit(~KEYPADPIN,ROW2) ) { return '4'; }
 2b6:	86 b1       	in	r24, 0x06	; 6
 2b8:	80 95       	com	r24
 2ba:	85 fd       	sbrc	r24, 5
 2bc:	44 c0       	rjmp	.+136    	; 0x346 <GetKeypadKey+0x9e>
	if ( GetBit(~KEYPADPIN,ROW3) ) { return '7'; }
 2be:	86 b1       	in	r24, 0x06	; 6
 2c0:	80 95       	com	r24
 2c2:	86 fd       	sbrc	r24, 6
 2c4:	42 c0       	rjmp	.+132    	; 0x34a <GetKeypadKey+0xa2>
	if ( GetBit(~KEYPADPIN,ROW4) ) { return '*'; }
 2c6:	86 b1       	in	r24, 0x06	; 6
 2c8:	80 95       	com	r24
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	88 0f       	add	r24, r24
 2ce:	89 2f       	mov	r24, r25
 2d0:	88 1f       	adc	r24, r24
 2d2:	99 0b       	sbc	r25, r25
 2d4:	91 95       	neg	r25
 2d6:	89 2b       	or	r24, r25
 2d8:	d1 f5       	brne	.+116    	; 0x34e <GetKeypadKey+0xa6>

	// Check keys in col 2
	KEYPADPORT = 0xFD;; // Set Px1 to 0; others 1
 2da:	8d ef       	ldi	r24, 0xFD	; 253
 2dc:	88 b9       	out	0x08, r24	; 8
	asm("nop"); // add a delay to allow PORTx to stabilize before checking
 2de:	00 00       	nop
	if ( GetBit(~KEYPADPIN,ROW1) ) { return '2'; }
 2e0:	86 b1       	in	r24, 0x06	; 6
 2e2:	80 95       	com	r24
 2e4:	84 fd       	sbrc	r24, 4
 2e6:	35 c0       	rjmp	.+106    	; 0x352 <GetKeypadKey+0xaa>
	if ( GetBit(~KEYPADPIN,ROW2) ) { return '5'; }
 2e8:	86 b1       	in	r24, 0x06	; 6
 2ea:	80 95       	com	r24
 2ec:	85 fd       	sbrc	r24, 5
 2ee:	33 c0       	rjmp	.+102    	; 0x356 <GetKeypadKey+0xae>
	if ( GetBit(~KEYPADPIN,ROW3) ) { return '8'; }
 2f0:	86 b1       	in	r24, 0x06	; 6
 2f2:	80 95       	com	r24
 2f4:	86 fd       	sbrc	r24, 6
 2f6:	31 c0       	rjmp	.+98     	; 0x35a <GetKeypadKey+0xb2>
	if ( GetBit(~KEYPADPIN,ROW4) ) { return '0'; }
 2f8:	86 b1       	in	r24, 0x06	; 6
 2fa:	80 95       	com	r24
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	88 0f       	add	r24, r24
 300:	89 2f       	mov	r24, r25
 302:	88 1f       	adc	r24, r24
 304:	99 0b       	sbc	r25, r25
 306:	91 95       	neg	r25
 308:	89 2b       	or	r24, r25
 30a:	49 f5       	brne	.+82     	; 0x35e <GetKeypadKey+0xb6>

	// Check keys in col 3
	KEYPADPORT = 0xFB;; // Set Px2 to 0; others 1
 30c:	8b ef       	ldi	r24, 0xFB	; 251
 30e:	88 b9       	out	0x08, r24	; 8
	asm("nop"); // add a delay to allow PORTx to stabilize before checking
 310:	00 00       	nop
	if ( GetBit(~KEYPADPIN,ROW1) ) { return '3'; }
 312:	86 b1       	in	r24, 0x06	; 6
 314:	80 95       	com	r24
 316:	84 fd       	sbrc	r24, 4
 318:	24 c0       	rjmp	.+72     	; 0x362 <GetKeypadKey+0xba>
	if ( GetBit(~KEYPADPIN,ROW2) ) { return '6'; }
 31a:	86 b1       	in	r24, 0x06	; 6
 31c:	80 95       	com	r24
 31e:	85 fd       	sbrc	r24, 5
 320:	22 c0       	rjmp	.+68     	; 0x366 <GetKeypadKey+0xbe>
	if ( GetBit(~KEYPADPIN,ROW3) ) { return '9'; }
 322:	86 b1       	in	r24, 0x06	; 6
 324:	80 95       	com	r24
 326:	86 fd       	sbrc	r24, 6
 328:	20 c0       	rjmp	.+64     	; 0x36a <GetKeypadKey+0xc2>
	if ( GetBit(~KEYPADPIN,ROW4) ) { return '#'; }
 32a:	86 b1       	in	r24, 0x06	; 6
 32c:	80 95       	com	r24
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	88 0f       	add	r24, r24
 332:	89 2f       	mov	r24, r25
 334:	88 1f       	adc	r24, r24
 336:	99 0b       	sbc	r25, r25
 338:	91 95       	neg	r25
 33a:	89 2b       	or	r24, r25
 33c:	c1 f4       	brne	.+48     	; 0x36e <GetKeypadKey+0xc6>
	
	return '\0';
 33e:	80 e0       	ldi	r24, 0x00	; 0
 340:	08 95       	ret
unsigned char GetKeypadKey() {

	// Check keys in col 1
	KEYPADPORT = 0xFE; // Set Px0 to 0; others 1
	asm("nop"); // add a delay to allow PORTx to stabilize before checking
	if ( GetBit(~KEYPADPIN,ROW1) ) { return '1'; }
 342:	81 e3       	ldi	r24, 0x31	; 49
 344:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW2) ) { return '4'; }
 346:	84 e3       	ldi	r24, 0x34	; 52
 348:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW3) ) { return '7'; }
 34a:	87 e3       	ldi	r24, 0x37	; 55
 34c:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW4) ) { return '*'; }
 34e:	8a e2       	ldi	r24, 0x2A	; 42
 350:	08 95       	ret

	// Check keys in col 2
	KEYPADPORT = 0xFD;; // Set Px1 to 0; others 1
	asm("nop"); // add a delay to allow PORTx to stabilize before checking
	if ( GetBit(~KEYPADPIN,ROW1) ) { return '2'; }
 352:	82 e3       	ldi	r24, 0x32	; 50
 354:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW2) ) { return '5'; }
 356:	85 e3       	ldi	r24, 0x35	; 53
 358:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW3) ) { return '8'; }
 35a:	88 e3       	ldi	r24, 0x38	; 56
 35c:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW4) ) { return '0'; }
 35e:	80 e3       	ldi	r24, 0x30	; 48
 360:	08 95       	ret

	// Check keys in col 3
	KEYPADPORT = 0xFB;; // Set Px2 to 0; others 1
	asm("nop"); // add a delay to allow PORTx to stabilize before checking
	if ( GetBit(~KEYPADPIN,ROW1) ) { return '3'; }
 362:	83 e3       	ldi	r24, 0x33	; 51
 364:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW2) ) { return '6'; }
 366:	86 e3       	ldi	r24, 0x36	; 54
 368:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW3) ) { return '9'; }
 36a:	89 e3       	ldi	r24, 0x39	; 57
 36c:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW4) ) { return '#'; }
 36e:	83 e2       	ldi	r24, 0x23	; 35
	
	return '\0';
}
 370:	08 95       	ret

00000372 <outputchar>:
#include <avr/io.h>
#include <string.h>
#include "keypad.h"
#include "nokia5110.h"

void outputchar(unsigned char c){
 372:	cf 93       	push	r28
 374:	c8 2f       	mov	r28, r24
	nokia_lcd_clear();
 376:	36 d1       	rcall	.+620    	; 0x5e4 <nokia_lcd_clear>
	nokia_lcd_write_char(c,1);
 378:	61 e0       	ldi	r22, 0x01	; 1
 37a:	8c 2f       	mov	r24, r28
	nokia_lcd_render();
 37c:	6f d1       	rcall	.+734    	; 0x65c <nokia_lcd_write_char>
 37e:	2a d2       	rcall	.+1108   	; 0x7d4 <nokia_lcd_render>
}
 380:	cf 91       	pop	r28
 382:	08 95       	ret

00000384 <main>:

int main(void)
{
 384:	cf 93       	push	r28
 386:	df 93       	push	r29
 388:	cd b7       	in	r28, 0x3d	; 61
 38a:	de b7       	in	r29, 0x3e	; 62
 38c:	a6 97       	sbiw	r28, 0x26	; 38
 38e:	0f b6       	in	r0, 0x3f	; 63
 390:	f8 94       	cli
 392:	de bf       	out	0x3e, r29	; 62
 394:	0f be       	out	0x3f, r0	; 63
 396:	cd bf       	out	0x3d, r28	; 61
	/*
	when scaling by 1: 14 chars per line, 8 pixels in height
	when scaling by 2: 8 chars per line, 14 pixels in height
	when scaling by 3: 5 chars per line, 21 pixels in height
	*/
	DDRC = 0x0F;	//Set PC7...PC3 to input, PC2...PC0 to output [0000 1111]
 398:	8f e0       	ldi	r24, 0x0F	; 15
 39a:	87 b9       	out	0x07, r24	; 7
	PORTC = 0xF0;	//Init port C to 1s							[1111 0000]
 39c:	80 ef       	ldi	r24, 0xF0	; 240
 39e:	88 b9       	out	0x08, r24	; 8
	DDRD = 0xFF;	//Set Port D to output
 3a0:	8f ef       	ldi	r24, 0xFF	; 255
 3a2:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0x00;	//Init Port D to 0s
 3a4:	1b b8       	out	0x0b, r1	; 11
	nokia_lcd_init();
 3a6:	e8 d0       	rcall	.+464    	; 0x578 <nokia_lcd_init>
	nokia_lcd_clear();
 3a8:	1d d1       	rcall	.+570    	; 0x5e4 <nokia_lcd_clear>
 3aa:	82 e3       	ldi	r24, 0x32	; 50
	
	unsigned char two[4] = {'2','A','B','C'};
 3ac:	89 83       	std	Y+1, r24	; 0x01
 3ae:	81 e4       	ldi	r24, 0x41	; 65
 3b0:	8a 83       	std	Y+2, r24	; 0x02
 3b2:	82 e4       	ldi	r24, 0x42	; 66
 3b4:	8b 83       	std	Y+3, r24	; 0x03
 3b6:	83 e4       	ldi	r24, 0x43	; 67
 3b8:	8c 83       	std	Y+4, r24	; 0x04
 3ba:	83 e3       	ldi	r24, 0x33	; 51
	unsigned char three[4] = {'3','D','E','F'};
 3bc:	8d 83       	std	Y+5, r24	; 0x05
 3be:	84 e4       	ldi	r24, 0x44	; 68
 3c0:	8e 83       	std	Y+6, r24	; 0x06
 3c2:	85 e4       	ldi	r24, 0x45	; 69
 3c4:	8f 83       	std	Y+7, r24	; 0x07
 3c6:	86 e4       	ldi	r24, 0x46	; 70
 3c8:	88 87       	std	Y+8, r24	; 0x08
 3ca:	84 e3       	ldi	r24, 0x34	; 52
	unsigned char four[4] = {'4','G','H','I'};
 3cc:	89 87       	std	Y+9, r24	; 0x09
 3ce:	87 e4       	ldi	r24, 0x47	; 71
 3d0:	8a 87       	std	Y+10, r24	; 0x0a
 3d2:	88 e4       	ldi	r24, 0x48	; 72
 3d4:	8b 87       	std	Y+11, r24	; 0x0b
 3d6:	89 e4       	ldi	r24, 0x49	; 73
 3d8:	8c 87       	std	Y+12, r24	; 0x0c
 3da:	85 e3       	ldi	r24, 0x35	; 53
	unsigned char five[4] = {'5','J','K','L'};
 3dc:	8d 87       	std	Y+13, r24	; 0x0d
 3de:	8a e4       	ldi	r24, 0x4A	; 74
 3e0:	8e 87       	std	Y+14, r24	; 0x0e
 3e2:	8b e4       	ldi	r24, 0x4B	; 75
 3e4:	8f 87       	std	Y+15, r24	; 0x0f
 3e6:	8c e4       	ldi	r24, 0x4C	; 76
 3e8:	88 8b       	std	Y+16, r24	; 0x10
 3ea:	86 e3       	ldi	r24, 0x36	; 54
	unsigned char six[4] = {'6','M','N','O'};
 3ec:	89 8b       	std	Y+17, r24	; 0x11
 3ee:	8d e4       	ldi	r24, 0x4D	; 77
 3f0:	8a 8b       	std	Y+18, r24	; 0x12
 3f2:	8e e4       	ldi	r24, 0x4E	; 78
 3f4:	8b 8b       	std	Y+19, r24	; 0x13
 3f6:	8f e4       	ldi	r24, 0x4F	; 79
 3f8:	8c 8b       	std	Y+20, r24	; 0x14
 3fa:	87 e3       	ldi	r24, 0x37	; 55
	unsigned char seven[4] = {'7','P','R','S'};
 3fc:	8d 8b       	std	Y+21, r24	; 0x15
 3fe:	80 e5       	ldi	r24, 0x50	; 80
 400:	8e 8b       	std	Y+22, r24	; 0x16
 402:	82 e5       	ldi	r24, 0x52	; 82
 404:	8f 8b       	std	Y+23, r24	; 0x17
 406:	83 e5       	ldi	r24, 0x53	; 83
 408:	88 8f       	std	Y+24, r24	; 0x18
 40a:	88 e3       	ldi	r24, 0x38	; 56
	unsigned char eight[4] = {'8','T','U','V'};
 40c:	89 8f       	std	Y+25, r24	; 0x19
 40e:	84 e5       	ldi	r24, 0x54	; 84
 410:	8a 8f       	std	Y+26, r24	; 0x1a
 412:	85 e5       	ldi	r24, 0x55	; 85
 414:	8b 8f       	std	Y+27, r24	; 0x1b
 416:	86 e5       	ldi	r24, 0x56	; 86
 418:	8c 8f       	std	Y+28, r24	; 0x1c
 41a:	89 e3       	ldi	r24, 0x39	; 57
	unsigned char nine[4] = {'9','W','X','Y'};
 41c:	8d 8f       	std	Y+29, r24	; 0x1d
 41e:	87 e5       	ldi	r24, 0x57	; 87
 420:	8e 8f       	std	Y+30, r24	; 0x1e
 422:	88 e5       	ldi	r24, 0x58	; 88
 424:	8f 8f       	std	Y+31, r24	; 0x1f
 426:	89 e5       	ldi	r24, 0x59	; 89
 428:	88 a3       	std	Y+32, r24	; 0x20
 42a:	86 e0       	ldi	r24, 0x06	; 6
	
	
	char intro[] = "Hello";
 42c:	e0 e0       	ldi	r30, 0x00	; 0
 42e:	f1 e0       	ldi	r31, 0x01	; 1
 430:	de 01       	movw	r26, r28
 432:	91 96       	adiw	r26, 0x21	; 33
 434:	01 90       	ld	r0, Z+
 436:	0d 92       	st	X+, r0
 438:	8a 95       	dec	r24
 43a:	e1 f7       	brne	.-8      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 43c:	61 e0       	ldi	r22, 0x01	; 1
	nokia_lcd_write_string(intro,1);
 43e:	ce 01       	movw	r24, r28
 440:	81 96       	adiw	r24, 0x21	; 33
 442:	b6 d1       	rcall	.+876    	; 0x7b0 <nokia_lcd_write_string>
	nokia_lcd_render();
 444:	c7 d1       	rcall	.+910    	; 0x7d4 <nokia_lcd_render>
	unsigned char previous_key = '\0';
	unsigned char tmp;
	unsigned char pushed_key;
	unsigned int num_times_key_pushed = 0;
 446:	e1 2c       	mov	r14, r1
 448:	f1 2c       	mov	r15, r1
	
	
	char intro[] = "Hello";
	nokia_lcd_write_string(intro,1);
	nokia_lcd_render();
	unsigned char previous_key = '\0';
 44a:	00 e0       	ldi	r16, 0x00	; 0
	unsigned char tmp;
	unsigned char pushed_key;
	unsigned int num_times_key_pushed = 0;
    while (1) 
    {
		while((pushed_key = GetKeypadKey()) == '\0'){}
 44c:	2d df       	rcall	.-422    	; 0x2a8 <GetKeypadKey>
 44e:	18 2f       	mov	r17, r24
 450:	88 23       	and	r24, r24
 452:	e1 f3       	breq	.-8      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
				
		while((tmp = GetKeypadKey()) == pushed_key){}
 454:	29 df       	rcall	.-430    	; 0x2a8 <GetKeypadKey>
 456:	18 17       	cp	r17, r24
 458:	e9 f3       	breq	.-6      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 45a:	10 13       	cpse	r17, r16
		
		if(previous_key == pushed_key){
 45c:	63 c0       	rjmp	.+198    	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 45e:	83 e0       	ldi	r24, 0x03	; 3
			if(num_times_key_pushed < 3){
 460:	e8 16       	cp	r14, r24
 462:	f1 04       	cpc	r15, r1
 464:	20 f4       	brcc	.+8      	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 466:	8f ef       	ldi	r24, 0xFF	; 255
				num_times_key_pushed++;
 468:	e8 1a       	sub	r14, r24
 46a:	f8 0a       	sbc	r15, r24
 46c:	02 c0       	rjmp	.+4      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 46e:	e1 2c       	mov	r14, r1
			}
			
			else{
				num_times_key_pushed = 0;
 470:	f1 2c       	mov	r15, r1
 472:	02 33       	cpi	r16, 0x32	; 50
			}
			
			
			if(pushed_key == '2'){ outputchar(two[num_times_key_pushed]); }
 474:	49 f4       	brne	.+18     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 476:	e1 e0       	ldi	r30, 0x01	; 1
 478:	f0 e0       	ldi	r31, 0x00	; 0
 47a:	ec 0f       	add	r30, r28
 47c:	fd 1f       	adc	r31, r29
 47e:	ee 0d       	add	r30, r14
 480:	ff 1d       	adc	r31, r15
 482:	80 81       	ld	r24, Z
 484:	76 df       	rcall	.-276    	; 0x372 <outputchar>
 486:	e2 cf       	rjmp	.-60     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 488:	03 33       	cpi	r16, 0x33	; 51
			else if(pushed_key == '3'){ outputchar(three[num_times_key_pushed]); }
 48a:	49 f4       	brne	.+18     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 48c:	e5 e0       	ldi	r30, 0x05	; 5
 48e:	f0 e0       	ldi	r31, 0x00	; 0
 490:	ec 0f       	add	r30, r28
 492:	fd 1f       	adc	r31, r29
 494:	ee 0d       	add	r30, r14
 496:	ff 1d       	adc	r31, r15
 498:	80 81       	ld	r24, Z
 49a:	6b df       	rcall	.-298    	; 0x372 <outputchar>
 49c:	d7 cf       	rjmp	.-82     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 49e:	04 33       	cpi	r16, 0x34	; 52
			else if(pushed_key == '4'){ outputchar(four[num_times_key_pushed]); }
 4a0:	49 f4       	brne	.+18     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4a2:	e9 e0       	ldi	r30, 0x09	; 9
 4a4:	f0 e0       	ldi	r31, 0x00	; 0
 4a6:	ec 0f       	add	r30, r28
 4a8:	fd 1f       	adc	r31, r29
 4aa:	ee 0d       	add	r30, r14
 4ac:	ff 1d       	adc	r31, r15
 4ae:	80 81       	ld	r24, Z
 4b0:	60 df       	rcall	.-320    	; 0x372 <outputchar>
 4b2:	cc cf       	rjmp	.-104    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 4b4:	05 33       	cpi	r16, 0x35	; 53
			else if(pushed_key == '5'){ outputchar(five[num_times_key_pushed]); }
 4b6:	49 f4       	brne	.+18     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4b8:	ed e0       	ldi	r30, 0x0D	; 13
 4ba:	f0 e0       	ldi	r31, 0x00	; 0
 4bc:	ec 0f       	add	r30, r28
 4be:	fd 1f       	adc	r31, r29
 4c0:	ee 0d       	add	r30, r14
 4c2:	ff 1d       	adc	r31, r15
 4c4:	80 81       	ld	r24, Z
 4c6:	55 df       	rcall	.-342    	; 0x372 <outputchar>
 4c8:	c1 cf       	rjmp	.-126    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
			else if(pushed_key == '6'){ outputchar(six[num_times_key_pushed]); }
 4ca:	06 33       	cpi	r16, 0x36	; 54
 4cc:	49 f4       	brne	.+18     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4ce:	e1 e1       	ldi	r30, 0x11	; 17
 4d0:	f0 e0       	ldi	r31, 0x00	; 0
 4d2:	ec 0f       	add	r30, r28
 4d4:	fd 1f       	adc	r31, r29
 4d6:	ee 0d       	add	r30, r14
 4d8:	ff 1d       	adc	r31, r15
 4da:	80 81       	ld	r24, Z
 4dc:	4a df       	rcall	.-364    	; 0x372 <outputchar>
 4de:	b6 cf       	rjmp	.-148    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
			else if(pushed_key == '7'){ outputchar(seven[num_times_key_pushed]); }
 4e0:	07 33       	cpi	r16, 0x37	; 55
 4e2:	49 f4       	brne	.+18     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4e4:	e5 e1       	ldi	r30, 0x15	; 21
 4e6:	f0 e0       	ldi	r31, 0x00	; 0
 4e8:	ec 0f       	add	r30, r28
 4ea:	fd 1f       	adc	r31, r29
 4ec:	ee 0d       	add	r30, r14
 4ee:	ff 1d       	adc	r31, r15
 4f0:	80 81       	ld	r24, Z
 4f2:	3f df       	rcall	.-386    	; 0x372 <outputchar>
 4f4:	ab cf       	rjmp	.-170    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
			else if(pushed_key == '8'){ outputchar(eight[num_times_key_pushed]); }
 4f6:	08 33       	cpi	r16, 0x38	; 56
 4f8:	49 f4       	brne	.+18     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 4fa:	e9 e1       	ldi	r30, 0x19	; 25
 4fc:	f0 e0       	ldi	r31, 0x00	; 0
 4fe:	ec 0f       	add	r30, r28
 500:	fd 1f       	adc	r31, r29
 502:	ee 0d       	add	r30, r14
 504:	ff 1d       	adc	r31, r15
 506:	80 81       	ld	r24, Z
 508:	34 df       	rcall	.-408    	; 0x372 <outputchar>
 50a:	a0 cf       	rjmp	.-192    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
			else if(pushed_key == '9'){ outputchar(nine[num_times_key_pushed]); }
 50c:	09 33       	cpi	r16, 0x39	; 57
 50e:	09 f0       	breq	.+2      	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 510:	9d cf       	rjmp	.-198    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 512:	ed e1       	ldi	r30, 0x1D	; 29
 514:	f0 e0       	ldi	r31, 0x00	; 0
 516:	ec 0f       	add	r30, r28
 518:	fd 1f       	adc	r31, r29
 51a:	ee 0d       	add	r30, r14
 51c:	ff 1d       	adc	r31, r15
 51e:	80 81       	ld	r24, Z
 520:	28 df       	rcall	.-432    	; 0x372 <outputchar>
		}
		
		else{
			nokia_lcd_clear();
 522:	94 cf       	rjmp	.-216    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 524:	5f d0       	rcall	.+190    	; 0x5e4 <nokia_lcd_clear>
			nokia_lcd_write_char(pushed_key,1);
 526:	61 e0       	ldi	r22, 0x01	; 1
 528:	81 2f       	mov	r24, r17
 52a:	98 d0       	rcall	.+304    	; 0x65c <nokia_lcd_write_char>
 52c:	53 d1       	rcall	.+678    	; 0x7d4 <nokia_lcd_render>
			nokia_lcd_render();
 52e:	01 2f       	mov	r16, r17
 530:	e1 2c       	mov	r14, r1
	unsigned char tmp;
	unsigned char pushed_key;
	unsigned int num_times_key_pushed = 0;
    while (1) 
    {
		while((pushed_key = GetKeypadKey()) == '\0'){}
 532:	f1 2c       	mov	r15, r1
		else{
			nokia_lcd_clear();
			nokia_lcd_write_char(pushed_key,1);
			nokia_lcd_render();
			previous_key = pushed_key;
			num_times_key_pushed = 0;
 534:	8b cf       	rjmp	.-234    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>

00000536 <write>:
 536:	59 98       	cbi	0x0b, 1	; 11
 538:	66 23       	and	r22, r22
}

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
	nokia_lcd.cursor_y = y;
 53a:	11 f0       	breq	.+4      	; 0x540 <write+0xa>
 53c:	5b 9a       	sbi	0x0b, 3	; 11
 53e:	15 c0       	rjmp	.+42     	; 0x56a <write+0x34>
 540:	5b 98       	cbi	0x0b, 3	; 11
 542:	13 c0       	rjmp	.+38     	; 0x56a <write+0x34>
 544:	ac 01       	movw	r20, r24
 546:	02 2e       	mov	r0, r18
 548:	02 c0       	rjmp	.+4      	; 0x54e <write+0x18>
 54a:	55 95       	asr	r21
 54c:	47 95       	ror	r20
 54e:	0a 94       	dec	r0
 550:	e2 f7       	brpl	.-8      	; 0x54a <write+0x14>
 552:	40 ff       	sbrs	r20, 0
 554:	02 c0       	rjmp	.+4      	; 0x55a <write+0x24>
 556:	5c 9a       	sbi	0x0b, 4	; 11
 558:	01 c0       	rjmp	.+2      	; 0x55c <write+0x26>
 55a:	5c 98       	cbi	0x0b, 4	; 11
 55c:	5d 9a       	sbi	0x0b, 5	; 11
 55e:	5d 98       	cbi	0x0b, 5	; 11
 560:	21 50       	subi	r18, 0x01	; 1
 562:	31 09       	sbc	r19, r1
 564:	78 f7       	brcc	.-34     	; 0x544 <write+0xe>
 566:	59 9a       	sbi	0x0b, 1	; 11
 568:	08 95       	ret
 56a:	27 e0       	ldi	r18, 0x07	; 7
 56c:	30 e0       	ldi	r19, 0x00	; 0
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	e9 cf       	rjmp	.-46     	; 0x544 <write+0xe>

00000572 <write_cmd>:
 572:	60 e0       	ldi	r22, 0x00	; 0
 574:	e0 cf       	rjmp	.-64     	; 0x536 <write>
 576:	08 95       	ret

00000578 <nokia_lcd_init>:
 578:	cf 93       	push	r28
 57a:	df 93       	push	r29
 57c:	51 9a       	sbi	0x0a, 1	; 10
 57e:	52 9a       	sbi	0x0a, 2	; 10
 580:	53 9a       	sbi	0x0a, 3	; 10
 582:	54 9a       	sbi	0x0a, 4	; 10
 584:	55 9a       	sbi	0x0a, 5	; 10
 586:	5a 9a       	sbi	0x0b, 2	; 11
 588:	59 9a       	sbi	0x0b, 1	; 11
 58a:	83 ec       	ldi	r24, 0xC3	; 195
 58c:	99 e0       	ldi	r25, 0x09	; 9
 58e:	01 97       	sbiw	r24, 0x01	; 1
 590:	f1 f7       	brne	.-4      	; 0x58e <nokia_lcd_init+0x16>
 592:	00 c0       	rjmp	.+0      	; 0x594 <nokia_lcd_init+0x1c>
 594:	00 00       	nop
 596:	5a 98       	cbi	0x0b, 2	; 11
 598:	8b e5       	ldi	r24, 0x5B	; 91
 59a:	94 e4       	ldi	r25, 0x44	; 68
 59c:	01 97       	sbiw	r24, 0x01	; 1
 59e:	f1 f7       	brne	.-4      	; 0x59c <nokia_lcd_init+0x24>
 5a0:	00 c0       	rjmp	.+0      	; 0x5a2 <nokia_lcd_init+0x2a>
 5a2:	00 00       	nop
 5a4:	5a 9a       	sbi	0x0b, 2	; 11
 5a6:	59 98       	cbi	0x0b, 1	; 11
 5a8:	81 e2       	ldi	r24, 0x21	; 33
 5aa:	e3 df       	rcall	.-58     	; 0x572 <write_cmd>
 5ac:	83 e1       	ldi	r24, 0x13	; 19
 5ae:	e1 df       	rcall	.-62     	; 0x572 <write_cmd>
 5b0:	86 e0       	ldi	r24, 0x06	; 6
 5b2:	df df       	rcall	.-66     	; 0x572 <write_cmd>
 5b4:	82 ec       	ldi	r24, 0xC2	; 194
 5b6:	dd df       	rcall	.-70     	; 0x572 <write_cmd>
 5b8:	80 e2       	ldi	r24, 0x20	; 32
 5ba:	db df       	rcall	.-74     	; 0x572 <write_cmd>
 5bc:	89 e0       	ldi	r24, 0x09	; 9
 5be:	d9 df       	rcall	.-78     	; 0x572 <write_cmd>
 5c0:	80 e8       	ldi	r24, 0x80	; 128
 5c2:	d7 df       	rcall	.-82     	; 0x572 <write_cmd>
 5c4:	80 e4       	ldi	r24, 0x40	; 64
 5c6:	d5 df       	rcall	.-86     	; 0x572 <write_cmd>
 5c8:	c8 ef       	ldi	r28, 0xF8	; 248
 5ca:	d1 e0       	ldi	r29, 0x01	; 1
 5cc:	61 e0       	ldi	r22, 0x01	; 1
 5ce:	80 e0       	ldi	r24, 0x00	; 0
 5d0:	b2 df       	rcall	.-156    	; 0x536 <write>
 5d2:	21 97       	sbiw	r28, 0x01	; 1
 5d4:	d9 f7       	brne	.-10     	; 0x5cc <nokia_lcd_init+0x54>
 5d6:	88 e0       	ldi	r24, 0x08	; 8
 5d8:	cc df       	rcall	.-104    	; 0x572 <write_cmd>
 5da:	8c e0       	ldi	r24, 0x0C	; 12
 5dc:	ca df       	rcall	.-108    	; 0x572 <write_cmd>
 5de:	df 91       	pop	r29
 5e0:	cf 91       	pop	r28
 5e2:	08 95       	ret

000005e4 <nokia_lcd_clear>:
 5e4:	80 e8       	ldi	r24, 0x80	; 128
 5e6:	c5 df       	rcall	.-118    	; 0x572 <write_cmd>
 5e8:	80 e4       	ldi	r24, 0x40	; 64
 5ea:	c3 df       	rcall	.-122    	; 0x572 <write_cmd>
 5ec:	10 92 fe 02 	sts	0x02FE, r1	; 0x8002fe <__data_end+0x1f8>
 5f0:	10 92 ff 02 	sts	0x02FF, r1	; 0x8002ff <__data_end+0x1f9>
 5f4:	e6 e0       	ldi	r30, 0x06	; 6
 5f6:	f1 e0       	ldi	r31, 0x01	; 1
 5f8:	8e ef       	ldi	r24, 0xFE	; 254
 5fa:	92 e0       	ldi	r25, 0x02	; 2
 5fc:	11 92       	st	Z+, r1
 5fe:	e8 17       	cp	r30, r24
 600:	f9 07       	cpc	r31, r25
 602:	e1 f7       	brne	.-8      	; 0x5fc <nokia_lcd_clear+0x18>
 604:	08 95       	ret

00000606 <nokia_lcd_set_pixel>:
 606:	26 2f       	mov	r18, r22
 608:	26 95       	lsr	r18
 60a:	26 95       	lsr	r18
 60c:	26 95       	lsr	r18
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	34 e5       	ldi	r19, 0x54	; 84
 612:	23 9f       	mul	r18, r19
 614:	80 0d       	add	r24, r0
 616:	91 1d       	adc	r25, r1
 618:	11 24       	eor	r1, r1
 61a:	44 23       	and	r20, r20
 61c:	79 f0       	breq	.+30     	; 0x63c <nokia_lcd_set_pixel+0x36>
 61e:	fc 01       	movw	r30, r24
 620:	ea 5f       	subi	r30, 0xFA	; 250
 622:	fe 4f       	sbci	r31, 0xFE	; 254
 624:	67 70       	andi	r22, 0x07	; 7
 626:	81 e0       	ldi	r24, 0x01	; 1
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	02 c0       	rjmp	.+4      	; 0x630 <nokia_lcd_set_pixel+0x2a>
 62c:	88 0f       	add	r24, r24
 62e:	99 1f       	adc	r25, r25
 630:	6a 95       	dec	r22
 632:	e2 f7       	brpl	.-8      	; 0x62c <nokia_lcd_set_pixel+0x26>
 634:	90 81       	ld	r25, Z
 636:	89 2b       	or	r24, r25
 638:	80 83       	st	Z, r24
 63a:	08 95       	ret
 63c:	fc 01       	movw	r30, r24
 63e:	ea 5f       	subi	r30, 0xFA	; 250
 640:	fe 4f       	sbci	r31, 0xFE	; 254
 642:	67 70       	andi	r22, 0x07	; 7
 644:	81 e0       	ldi	r24, 0x01	; 1
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	02 c0       	rjmp	.+4      	; 0x64e <nokia_lcd_set_pixel+0x48>
 64a:	88 0f       	add	r24, r24
 64c:	99 1f       	adc	r25, r25
 64e:	6a 95       	dec	r22
 650:	e2 f7       	brpl	.-8      	; 0x64a <nokia_lcd_set_pixel+0x44>
 652:	80 95       	com	r24
 654:	90 81       	ld	r25, Z
 656:	89 23       	and	r24, r25
 658:	80 83       	st	Z, r24
 65a:	08 95       	ret

0000065c <nokia_lcd_write_char>:
 65c:	5f 92       	push	r5
 65e:	6f 92       	push	r6
 660:	7f 92       	push	r7
 662:	8f 92       	push	r8
 664:	9f 92       	push	r9
 666:	af 92       	push	r10
 668:	bf 92       	push	r11
 66a:	cf 92       	push	r12
 66c:	df 92       	push	r13
 66e:	ef 92       	push	r14
 670:	ff 92       	push	r15
 672:	0f 93       	push	r16
 674:	1f 93       	push	r17
 676:	cf 93       	push	r28
 678:	df 93       	push	r29
 67a:	56 2e       	mov	r5, r22
 67c:	26 2f       	mov	r18, r22
 67e:	30 e0       	ldi	r19, 0x00	; 0
 680:	49 01       	movw	r8, r18
 682:	88 0c       	add	r8, r8
 684:	99 1c       	adc	r9, r9
 686:	88 0c       	add	r8, r8
 688:	99 1c       	adc	r9, r9
 68a:	82 0e       	add	r8, r18
 68c:	93 1e       	adc	r9, r19
 68e:	18 14       	cp	r1, r8
 690:	19 04       	cpc	r1, r9
 692:	0c f0       	brlt	.+2      	; 0x696 <nokia_lcd_write_char+0x3a>
 694:	59 c0       	rjmp	.+178    	; 0x748 <nokia_lcd_write_char+0xec>
 696:	89 01       	movw	r16, r18
 698:	00 0f       	add	r16, r16
 69a:	11 1f       	adc	r17, r17
 69c:	00 0f       	add	r16, r16
 69e:	11 1f       	adc	r17, r17
 6a0:	00 0f       	add	r16, r16
 6a2:	11 1f       	adc	r17, r17
 6a4:	02 1b       	sub	r16, r18
 6a6:	13 0b       	sbc	r17, r19
 6a8:	61 2c       	mov	r6, r1
 6aa:	a8 2e       	mov	r10, r24
 6ac:	b1 2c       	mov	r11, r1
 6ae:	c5 01       	movw	r24, r10
 6b0:	80 97       	sbiw	r24, 0x20	; 32
 6b2:	5c 01       	movw	r10, r24
 6b4:	aa 0c       	add	r10, r10
 6b6:	bb 1c       	adc	r11, r11
 6b8:	aa 0c       	add	r10, r10
 6ba:	bb 1c       	adc	r11, r11
 6bc:	a8 0e       	add	r10, r24
 6be:	b9 1e       	adc	r11, r25
 6c0:	0f 2e       	mov	r0, r31
 6c2:	ff ef       	ldi	r31, 0xFF	; 255
 6c4:	cf 2e       	mov	r12, r31
 6c6:	f2 e0       	ldi	r31, 0x02	; 2
 6c8:	df 2e       	mov	r13, r31
 6ca:	f0 2d       	mov	r31, r0
 6cc:	0f 2e       	mov	r0, r31
 6ce:	fe ef       	ldi	r31, 0xFE	; 254
 6d0:	ef 2e       	mov	r14, r31
 6d2:	f2 e0       	ldi	r31, 0x02	; 2
 6d4:	ff 2e       	mov	r15, r31
 6d6:	f0 2d       	mov	r31, r0
 6d8:	2a c0       	rjmp	.+84     	; 0x72e <nokia_lcd_write_char+0xd2>
 6da:	fe 01       	movw	r30, r28
 6dc:	24 91       	lpm	r18, Z
 6de:	30 e0       	ldi	r19, 0x00	; 0
 6e0:	87 2d       	mov	r24, r7
 6e2:	65 2d       	mov	r22, r5
 6e4:	8e d0       	rcall	.+284    	; 0x802 <__udivmodqi4>
 6e6:	02 c0       	rjmp	.+4      	; 0x6ec <nokia_lcd_write_char+0x90>
 6e8:	35 95       	asr	r19
 6ea:	27 95       	ror	r18
 6ec:	8a 95       	dec	r24
 6ee:	e2 f7       	brpl	.-8      	; 0x6e8 <nokia_lcd_write_char+0x8c>
 6f0:	20 ff       	sbrs	r18, 0
 6f2:	09 c0       	rjmp	.+18     	; 0x706 <nokia_lcd_write_char+0xaa>
 6f4:	f6 01       	movw	r30, r12
 6f6:	60 81       	ld	r22, Z
 6f8:	67 0d       	add	r22, r7
 6fa:	f7 01       	movw	r30, r14
 6fc:	80 81       	ld	r24, Z
 6fe:	41 e0       	ldi	r20, 0x01	; 1
 700:	86 0d       	add	r24, r6
 702:	81 df       	rcall	.-254    	; 0x606 <nokia_lcd_set_pixel>
 704:	08 c0       	rjmp	.+16     	; 0x716 <nokia_lcd_write_char+0xba>
 706:	f6 01       	movw	r30, r12
 708:	60 81       	ld	r22, Z
 70a:	67 0d       	add	r22, r7
 70c:	f7 01       	movw	r30, r14
 70e:	80 81       	ld	r24, Z
 710:	40 e0       	ldi	r20, 0x00	; 0
 712:	86 0d       	add	r24, r6
 714:	78 df       	rcall	.-272    	; 0x606 <nokia_lcd_set_pixel>
 716:	73 94       	inc	r7
 718:	87 2d       	mov	r24, r7
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	80 17       	cp	r24, r16
 71e:	91 07       	cpc	r25, r17
 720:	e4 f2       	brlt	.-72     	; 0x6da <nokia_lcd_write_char+0x7e>
 722:	63 94       	inc	r6
 724:	86 2d       	mov	r24, r6
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	88 15       	cp	r24, r8
 72a:	99 05       	cpc	r25, r9
 72c:	6c f4       	brge	.+26     	; 0x748 <nokia_lcd_write_char+0xec>
 72e:	10 16       	cp	r1, r16
 730:	11 06       	cpc	r1, r17
 732:	bc f7       	brge	.-18     	; 0x722 <nokia_lcd_write_char+0xc6>
 734:	86 2d       	mov	r24, r6
 736:	65 2d       	mov	r22, r5
 738:	64 d0       	rcall	.+200    	; 0x802 <__udivmodqi4>
 73a:	e5 01       	movw	r28, r10
 73c:	c8 0f       	add	r28, r24
 73e:	d1 1d       	adc	r29, r1
 740:	c4 57       	subi	r28, 0x74	; 116
 742:	df 4f       	sbci	r29, 0xFF	; 255
 744:	71 2c       	mov	r7, r1
 746:	c9 cf       	rjmp	.-110    	; 0x6da <nokia_lcd_write_char+0x7e>
 748:	80 91 fe 02 	lds	r24, 0x02FE	; 0x8002fe <__data_end+0x1f8>
 74c:	91 e0       	ldi	r25, 0x01	; 1
 74e:	98 0f       	add	r25, r24
 750:	85 2d       	mov	r24, r5
 752:	88 0f       	add	r24, r24
 754:	88 0f       	add	r24, r24
 756:	85 0d       	add	r24, r5
 758:	89 0f       	add	r24, r25
 75a:	84 35       	cpi	r24, 0x54	; 84
 75c:	18 f4       	brcc	.+6      	; 0x764 <nokia_lcd_write_char+0x108>
 75e:	80 93 fe 02 	sts	0x02FE, r24	; 0x8002fe <__data_end+0x1f8>
 762:	0e c0       	rjmp	.+28     	; 0x780 <nokia_lcd_write_char+0x124>
 764:	10 92 fe 02 	sts	0x02FE, r1	; 0x8002fe <__data_end+0x1f8>
 768:	ef ef       	ldi	r30, 0xFF	; 255
 76a:	f2 e0       	ldi	r31, 0x02	; 2
 76c:	80 81       	ld	r24, Z
 76e:	91 e0       	ldi	r25, 0x01	; 1
 770:	98 0f       	add	r25, r24
 772:	85 2d       	mov	r24, r5
 774:	88 0f       	add	r24, r24
 776:	88 0f       	add	r24, r24
 778:	88 0f       	add	r24, r24
 77a:	85 19       	sub	r24, r5
 77c:	89 0f       	add	r24, r25
 77e:	80 83       	st	Z, r24
 780:	80 91 ff 02 	lds	r24, 0x02FF	; 0x8002ff <__data_end+0x1f9>
 784:	80 33       	cpi	r24, 0x30	; 48
 786:	20 f0       	brcs	.+8      	; 0x790 <nokia_lcd_write_char+0x134>
 788:	10 92 fe 02 	sts	0x02FE, r1	; 0x8002fe <__data_end+0x1f8>
 78c:	10 92 ff 02 	sts	0x02FF, r1	; 0x8002ff <__data_end+0x1f9>
 790:	df 91       	pop	r29
 792:	cf 91       	pop	r28
 794:	1f 91       	pop	r17
 796:	0f 91       	pop	r16
 798:	ff 90       	pop	r15
 79a:	ef 90       	pop	r14
 79c:	df 90       	pop	r13
 79e:	cf 90       	pop	r12
 7a0:	bf 90       	pop	r11
 7a2:	af 90       	pop	r10
 7a4:	9f 90       	pop	r9
 7a6:	8f 90       	pop	r8
 7a8:	7f 90       	pop	r7
 7aa:	6f 90       	pop	r6
 7ac:	5f 90       	pop	r5
 7ae:	08 95       	ret

000007b0 <nokia_lcd_write_string>:
 7b0:	1f 93       	push	r17
 7b2:	cf 93       	push	r28
 7b4:	df 93       	push	r29
 7b6:	ec 01       	movw	r28, r24
 7b8:	88 81       	ld	r24, Y
 7ba:	88 23       	and	r24, r24
 7bc:	39 f0       	breq	.+14     	; 0x7cc <nokia_lcd_write_string+0x1c>
 7be:	16 2f       	mov	r17, r22
 7c0:	21 96       	adiw	r28, 0x01	; 1
 7c2:	61 2f       	mov	r22, r17
 7c4:	4b df       	rcall	.-362    	; 0x65c <nokia_lcd_write_char>
 7c6:	89 91       	ld	r24, Y+
 7c8:	81 11       	cpse	r24, r1
 7ca:	fb cf       	rjmp	.-10     	; 0x7c2 <nokia_lcd_write_string+0x12>
 7cc:	df 91       	pop	r29
 7ce:	cf 91       	pop	r28
 7d0:	1f 91       	pop	r17
 7d2:	08 95       	ret

000007d4 <nokia_lcd_render>:
}

void nokia_lcd_render(void)
{
 7d4:	0f 93       	push	r16
 7d6:	1f 93       	push	r17
 7d8:	cf 93       	push	r28
 7da:	df 93       	push	r29
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
 7dc:	80 e8       	ldi	r24, 0x80	; 128
 7de:	c9 de       	rcall	.-622    	; 0x572 <write_cmd>
	write_cmd(0x40);
 7e0:	80 e4       	ldi	r24, 0x40	; 64
 7e2:	c7 de       	rcall	.-626    	; 0x572 <write_cmd>
 7e4:	c6 e0       	ldi	r28, 0x06	; 6
 7e6:	d1 e0       	ldi	r29, 0x01	; 1
 7e8:	0e ef       	ldi	r16, 0xFE	; 254
 7ea:	12 e0       	ldi	r17, 0x02	; 2
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
 7ec:	61 e0       	ldi	r22, 0x01	; 1
 7ee:	89 91       	ld	r24, Y+
 7f0:	a2 de       	rcall	.-700    	; 0x536 <write>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
 7f2:	c0 17       	cp	r28, r16
 7f4:	d1 07       	cpc	r29, r17
 7f6:	d1 f7       	brne	.-12     	; 0x7ec <nokia_lcd_render+0x18>
		write_data(nokia_lcd.screen[i]);
}
 7f8:	df 91       	pop	r29
 7fa:	cf 91       	pop	r28
 7fc:	1f 91       	pop	r17
 7fe:	0f 91       	pop	r16
 800:	08 95       	ret

00000802 <__udivmodqi4>:
 802:	99 1b       	sub	r25, r25
 804:	79 e0       	ldi	r23, 0x09	; 9
 806:	04 c0       	rjmp	.+8      	; 0x810 <__udivmodqi4_ep>

00000808 <__udivmodqi4_loop>:
 808:	99 1f       	adc	r25, r25
 80a:	96 17       	cp	r25, r22
 80c:	08 f0       	brcs	.+2      	; 0x810 <__udivmodqi4_ep>
 80e:	96 1b       	sub	r25, r22

00000810 <__udivmodqi4_ep>:
 810:	88 1f       	adc	r24, r24
 812:	7a 95       	dec	r23
 814:	c9 f7       	brne	.-14     	; 0x808 <__udivmodqi4_loop>
 816:	80 95       	com	r24
 818:	08 95       	ret

0000081a <_exit>:
 81a:	f8 94       	cli

0000081c <__stop_program>:
 81c:	ff cf       	rjmp	.-2      	; 0x81c <__stop_program>
