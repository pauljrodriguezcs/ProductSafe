
Keypad2Nokia5110.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000006ce  00000762  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001fa  00800106  00800106  00000768  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000768  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000798  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  000007d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001013  00000000  00000000  00000878  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a91  00000000  00000000  0000188b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000795  00000000  00000000  0000231c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000194  00000000  00000000  00002ab4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e8  00000000  00000000  00002c48  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000645  00000000  00000000  00003230  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  00003875  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	35 c1       	rjmp	.+618    	; 0x26c <__ctors_end>
   2:	00 00       	nop
   4:	50 c1       	rjmp	.+672    	; 0x2a6 <__bad_interrupt>
   6:	00 00       	nop
   8:	4e c1       	rjmp	.+668    	; 0x2a6 <__bad_interrupt>
   a:	00 00       	nop
   c:	4c c1       	rjmp	.+664    	; 0x2a6 <__bad_interrupt>
   e:	00 00       	nop
  10:	4a c1       	rjmp	.+660    	; 0x2a6 <__bad_interrupt>
  12:	00 00       	nop
  14:	48 c1       	rjmp	.+656    	; 0x2a6 <__bad_interrupt>
  16:	00 00       	nop
  18:	46 c1       	rjmp	.+652    	; 0x2a6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	44 c1       	rjmp	.+648    	; 0x2a6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	42 c1       	rjmp	.+644    	; 0x2a6 <__bad_interrupt>
  22:	00 00       	nop
  24:	40 c1       	rjmp	.+640    	; 0x2a6 <__bad_interrupt>
  26:	00 00       	nop
  28:	3e c1       	rjmp	.+636    	; 0x2a6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3c c1       	rjmp	.+632    	; 0x2a6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	3a c1       	rjmp	.+628    	; 0x2a6 <__bad_interrupt>
  32:	00 00       	nop
  34:	38 c1       	rjmp	.+624    	; 0x2a6 <__bad_interrupt>
  36:	00 00       	nop
  38:	36 c1       	rjmp	.+620    	; 0x2a6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	34 c1       	rjmp	.+616    	; 0x2a6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	32 c1       	rjmp	.+612    	; 0x2a6 <__bad_interrupt>
  42:	00 00       	nop
  44:	30 c1       	rjmp	.+608    	; 0x2a6 <__bad_interrupt>
  46:	00 00       	nop
  48:	2e c1       	rjmp	.+604    	; 0x2a6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2c c1       	rjmp	.+600    	; 0x2a6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	2a c1       	rjmp	.+596    	; 0x2a6 <__bad_interrupt>
  52:	00 00       	nop
  54:	28 c1       	rjmp	.+592    	; 0x2a6 <__bad_interrupt>
  56:	00 00       	nop
  58:	26 c1       	rjmp	.+588    	; 0x2a6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	24 c1       	rjmp	.+584    	; 0x2a6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	22 c1       	rjmp	.+580    	; 0x2a6 <__bad_interrupt>
  62:	00 00       	nop
  64:	20 c1       	rjmp	.+576    	; 0x2a6 <__bad_interrupt>
  66:	00 00       	nop
  68:	1e c1       	rjmp	.+572    	; 0x2a6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1c c1       	rjmp	.+568    	; 0x2a6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	1a c1       	rjmp	.+564    	; 0x2a6 <__bad_interrupt>
  72:	00 00       	nop
  74:	18 c1       	rjmp	.+560    	; 0x2a6 <__bad_interrupt>
  76:	00 00       	nop
  78:	16 c1       	rjmp	.+556    	; 0x2a6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	14 c1       	rjmp	.+552    	; 0x2a6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	12 c1       	rjmp	.+548    	; 0x2a6 <__bad_interrupt>
  82:	00 00       	nop
  84:	10 c1       	rjmp	.+544    	; 0x2a6 <__bad_interrupt>
  86:	00 00       	nop
  88:	0e c1       	rjmp	.+540    	; 0x2a6 <__bad_interrupt>
	...

0000008c <CHARSET>:
  8c:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
  9c:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
  ac:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
  bc:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
  cc:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
  dc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
  ec:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
  fc:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
 10c:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
 11c:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
 12c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
 13c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
 14c:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
 15c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
 16c:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 17c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
 18c:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
 19c:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
 1ac:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
 1bc:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
 1cc:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
 1dc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
 1ec:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
 1fc:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
 20c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
 21c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
 22c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
 23c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
 24c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
 25c:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

0000026c <__ctors_end>:
 26c:	11 24       	eor	r1, r1
 26e:	1f be       	out	0x3f, r1	; 63
 270:	cf ef       	ldi	r28, 0xFF	; 255
 272:	d0 e4       	ldi	r29, 0x40	; 64
 274:	de bf       	out	0x3e, r29	; 62
 276:	cd bf       	out	0x3d, r28	; 61

00000278 <__do_copy_data>:
 278:	11 e0       	ldi	r17, 0x01	; 1
 27a:	a0 e0       	ldi	r26, 0x00	; 0
 27c:	b1 e0       	ldi	r27, 0x01	; 1
 27e:	ee ec       	ldi	r30, 0xCE	; 206
 280:	f6 e0       	ldi	r31, 0x06	; 6
 282:	00 e0       	ldi	r16, 0x00	; 0
 284:	0b bf       	out	0x3b, r16	; 59
 286:	02 c0       	rjmp	.+4      	; 0x28c <__do_copy_data+0x14>
 288:	07 90       	elpm	r0, Z+
 28a:	0d 92       	st	X+, r0
 28c:	a6 30       	cpi	r26, 0x06	; 6
 28e:	b1 07       	cpc	r27, r17
 290:	d9 f7       	brne	.-10     	; 0x288 <__do_copy_data+0x10>

00000292 <__do_clear_bss>:
 292:	23 e0       	ldi	r18, 0x03	; 3
 294:	a6 e0       	ldi	r26, 0x06	; 6
 296:	b1 e0       	ldi	r27, 0x01	; 1
 298:	01 c0       	rjmp	.+2      	; 0x29c <.do_clear_bss_start>

0000029a <.do_clear_bss_loop>:
 29a:	1d 92       	st	X+, r1

0000029c <.do_clear_bss_start>:
 29c:	a0 30       	cpi	r26, 0x00	; 0
 29e:	b2 07       	cpc	r27, r18
 2a0:	e1 f7       	brne	.-8      	; 0x29a <.do_clear_bss_loop>
 2a2:	67 d0       	rcall	.+206    	; 0x372 <main>
 2a4:	12 c2       	rjmp	.+1060   	; 0x6ca <_exit>

000002a6 <__bad_interrupt>:
 2a6:	ac ce       	rjmp	.-680    	; 0x0 <__vectors>

000002a8 <GetKeypadKey>:
//Parameter: None
//Returns: A keypad button press else '\0'
unsigned char GetKeypadKey() {

	// Check keys in col 1
	KEYPADPORT = 0xFE; // Set Px0 to 0; others 1
 2a8:	8e ef       	ldi	r24, 0xFE	; 254
 2aa:	88 b9       	out	0x08, r24	; 8
	asm("nop"); // add a delay to allow PORTx to stabilize before checking
 2ac:	00 00       	nop
	if ( GetBit(~KEYPADPIN,ROW1) ) { return '1'; }
 2ae:	86 b1       	in	r24, 0x06	; 6
 2b0:	80 95       	com	r24
 2b2:	84 fd       	sbrc	r24, 4
 2b4:	46 c0       	rjmp	.+140    	; 0x342 <GetKeypadKey+0x9a>
	if ( GetBit(~KEYPADPIN,ROW2) ) { return '4'; }
 2b6:	86 b1       	in	r24, 0x06	; 6
 2b8:	80 95       	com	r24
 2ba:	85 fd       	sbrc	r24, 5
 2bc:	44 c0       	rjmp	.+136    	; 0x346 <GetKeypadKey+0x9e>
	if ( GetBit(~KEYPADPIN,ROW3) ) { return '7'; }
 2be:	86 b1       	in	r24, 0x06	; 6
 2c0:	80 95       	com	r24
 2c2:	86 fd       	sbrc	r24, 6
 2c4:	42 c0       	rjmp	.+132    	; 0x34a <GetKeypadKey+0xa2>
	if ( GetBit(~KEYPADPIN,ROW4) ) { return '*'; }
 2c6:	86 b1       	in	r24, 0x06	; 6
 2c8:	80 95       	com	r24
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	88 0f       	add	r24, r24
 2ce:	89 2f       	mov	r24, r25
 2d0:	88 1f       	adc	r24, r24
 2d2:	99 0b       	sbc	r25, r25
 2d4:	91 95       	neg	r25
 2d6:	89 2b       	or	r24, r25
 2d8:	d1 f5       	brne	.+116    	; 0x34e <GetKeypadKey+0xa6>

	// Check keys in col 2
	KEYPADPORT = 0xFD;; // Set Px1 to 0; others 1
 2da:	8d ef       	ldi	r24, 0xFD	; 253
 2dc:	88 b9       	out	0x08, r24	; 8
	asm("nop"); // add a delay to allow PORTx to stabilize before checking
 2de:	00 00       	nop
	if ( GetBit(~KEYPADPIN,ROW1) ) { return '2'; }
 2e0:	86 b1       	in	r24, 0x06	; 6
 2e2:	80 95       	com	r24
 2e4:	84 fd       	sbrc	r24, 4
 2e6:	35 c0       	rjmp	.+106    	; 0x352 <GetKeypadKey+0xaa>
	if ( GetBit(~KEYPADPIN,ROW2) ) { return '5'; }
 2e8:	86 b1       	in	r24, 0x06	; 6
 2ea:	80 95       	com	r24
 2ec:	85 fd       	sbrc	r24, 5
 2ee:	33 c0       	rjmp	.+102    	; 0x356 <GetKeypadKey+0xae>
	if ( GetBit(~KEYPADPIN,ROW3) ) { return '8'; }
 2f0:	86 b1       	in	r24, 0x06	; 6
 2f2:	80 95       	com	r24
 2f4:	86 fd       	sbrc	r24, 6
 2f6:	31 c0       	rjmp	.+98     	; 0x35a <GetKeypadKey+0xb2>
	if ( GetBit(~KEYPADPIN,ROW4) ) { return '0'; }
 2f8:	86 b1       	in	r24, 0x06	; 6
 2fa:	80 95       	com	r24
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	88 0f       	add	r24, r24
 300:	89 2f       	mov	r24, r25
 302:	88 1f       	adc	r24, r24
 304:	99 0b       	sbc	r25, r25
 306:	91 95       	neg	r25
 308:	89 2b       	or	r24, r25
 30a:	49 f5       	brne	.+82     	; 0x35e <GetKeypadKey+0xb6>

	// Check keys in col 3
	KEYPADPORT = 0xFB;; // Set Px2 to 0; others 1
 30c:	8b ef       	ldi	r24, 0xFB	; 251
 30e:	88 b9       	out	0x08, r24	; 8
	asm("nop"); // add a delay to allow PORTx to stabilize before checking
 310:	00 00       	nop
	if ( GetBit(~KEYPADPIN,ROW1) ) { return '3'; }
 312:	86 b1       	in	r24, 0x06	; 6
 314:	80 95       	com	r24
 316:	84 fd       	sbrc	r24, 4
 318:	24 c0       	rjmp	.+72     	; 0x362 <GetKeypadKey+0xba>
	if ( GetBit(~KEYPADPIN,ROW2) ) { return '6'; }
 31a:	86 b1       	in	r24, 0x06	; 6
 31c:	80 95       	com	r24
 31e:	85 fd       	sbrc	r24, 5
 320:	22 c0       	rjmp	.+68     	; 0x366 <GetKeypadKey+0xbe>
	if ( GetBit(~KEYPADPIN,ROW3) ) { return '9'; }
 322:	86 b1       	in	r24, 0x06	; 6
 324:	80 95       	com	r24
 326:	86 fd       	sbrc	r24, 6
 328:	20 c0       	rjmp	.+64     	; 0x36a <GetKeypadKey+0xc2>
	if ( GetBit(~KEYPADPIN,ROW4) ) { return '#'; }
 32a:	86 b1       	in	r24, 0x06	; 6
 32c:	80 95       	com	r24
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	88 0f       	add	r24, r24
 332:	89 2f       	mov	r24, r25
 334:	88 1f       	adc	r24, r24
 336:	99 0b       	sbc	r25, r25
 338:	91 95       	neg	r25
 33a:	89 2b       	or	r24, r25
 33c:	c1 f4       	brne	.+48     	; 0x36e <GetKeypadKey+0xc6>
	
	return '\0';
 33e:	80 e0       	ldi	r24, 0x00	; 0
 340:	08 95       	ret
unsigned char GetKeypadKey() {

	// Check keys in col 1
	KEYPADPORT = 0xFE; // Set Px0 to 0; others 1
	asm("nop"); // add a delay to allow PORTx to stabilize before checking
	if ( GetBit(~KEYPADPIN,ROW1) ) { return '1'; }
 342:	81 e3       	ldi	r24, 0x31	; 49
 344:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW2) ) { return '4'; }
 346:	84 e3       	ldi	r24, 0x34	; 52
 348:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW3) ) { return '7'; }
 34a:	87 e3       	ldi	r24, 0x37	; 55
 34c:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW4) ) { return '*'; }
 34e:	8a e2       	ldi	r24, 0x2A	; 42
 350:	08 95       	ret

	// Check keys in col 2
	KEYPADPORT = 0xFD;; // Set Px1 to 0; others 1
	asm("nop"); // add a delay to allow PORTx to stabilize before checking
	if ( GetBit(~KEYPADPIN,ROW1) ) { return '2'; }
 352:	82 e3       	ldi	r24, 0x32	; 50
 354:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW2) ) { return '5'; }
 356:	85 e3       	ldi	r24, 0x35	; 53
 358:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW3) ) { return '8'; }
 35a:	88 e3       	ldi	r24, 0x38	; 56
 35c:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW4) ) { return '0'; }
 35e:	80 e3       	ldi	r24, 0x30	; 48
 360:	08 95       	ret

	// Check keys in col 3
	KEYPADPORT = 0xFB;; // Set Px2 to 0; others 1
	asm("nop"); // add a delay to allow PORTx to stabilize before checking
	if ( GetBit(~KEYPADPIN,ROW1) ) { return '3'; }
 362:	83 e3       	ldi	r24, 0x33	; 51
 364:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW2) ) { return '6'; }
 366:	86 e3       	ldi	r24, 0x36	; 54
 368:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW3) ) { return '9'; }
 36a:	89 e3       	ldi	r24, 0x39	; 57
 36c:	08 95       	ret
	if ( GetBit(~KEYPADPIN,ROW4) ) { return '#'; }
 36e:	83 e2       	ldi	r24, 0x23	; 35
	
	return '\0';
}
 370:	08 95       	ret

00000372 <main>:
#include "keypad.h"
#include "nokia5110.h"


int main(void)
{
 372:	cf 93       	push	r28
 374:	df 93       	push	r29
 376:	00 d0       	rcall	.+0      	; 0x378 <main+0x6>
 378:	00 d0       	rcall	.+0      	; 0x37a <main+0x8>
 37a:	00 d0       	rcall	.+0      	; 0x37c <main+0xa>
 37c:	cd b7       	in	r28, 0x3d	; 61
 37e:	de b7       	in	r29, 0x3e	; 62
	/*
	when scaling by 1: 14 chars per line, 8 pixels in height
	when scaling by 2: 8 chars per line, 14 pixels in height
	when scaling by 3: 5 chars per line, 21 pixels in height
	*/
	DDRC = 0x0F;	//Set PC7...PC3 to input, PC2...PC0 to output [0000 1111]
 380:	8f e0       	ldi	r24, 0x0F	; 15
 382:	87 b9       	out	0x07, r24	; 7
	PORTC = 0xF0;	//Init port C to 1s							[1111 0000]
 384:	80 ef       	ldi	r24, 0xF0	; 240
 386:	88 b9       	out	0x08, r24	; 8
	DDRD = 0xFF;	//Set Port D to output
 388:	8f ef       	ldi	r24, 0xFF	; 255
 38a:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0x00;	//Init Port D to 0s
 38c:	1b b8       	out	0x0b, r1	; 11
	nokia_lcd_init();
 38e:	45 d0       	rcall	.+138    	; 0x41a <nokia_lcd_init>
	nokia_lcd_clear();
 390:	7a d0       	rcall	.+244    	; 0x486 <nokia_lcd_clear>
 392:	86 e0       	ldi	r24, 0x06	; 6
	
	char intro[] = "Hello";
 394:	e0 e0       	ldi	r30, 0x00	; 0
 396:	f1 e0       	ldi	r31, 0x01	; 1
 398:	de 01       	movw	r26, r28
 39a:	11 96       	adiw	r26, 0x01	; 1
 39c:	01 90       	ld	r0, Z+
 39e:	0d 92       	st	X+, r0
 3a0:	8a 95       	dec	r24
 3a2:	e1 f7       	brne	.-8      	; 0x39c <main+0x2a>
 3a4:	61 e0       	ldi	r22, 0x01	; 1
	nokia_lcd_write_string(intro,1);
 3a6:	ce 01       	movw	r24, r28
 3a8:	01 96       	adiw	r24, 0x01	; 1
 3aa:	53 d1       	rcall	.+678    	; 0x652 <nokia_lcd_write_string>
	nokia_lcd_render();
 3ac:	64 d1       	rcall	.+712    	; 0x676 <nokia_lcd_render>
 3ae:	00 e0       	ldi	r16, 0x00	; 0
	unsigned char key = '\0';
 3b0:	7b df       	rcall	.-266    	; 0x2a8 <GetKeypadKey>
	unsigned char tmp = '\0';
    while (1) 
    {
		tmp = GetKeypadKey();
 3b2:	18 2f       	mov	r17, r24
 3b4:	80 17       	cp	r24, r16
		if(key != tmp){
 3b6:	e1 f3       	breq	.-8      	; 0x3b0 <main+0x3e>
			nokia_lcd_clear();
 3b8:	66 d0       	rcall	.+204    	; 0x486 <nokia_lcd_clear>
 3ba:	61 e0       	ldi	r22, 0x01	; 1
			nokia_lcd_write_char(key,1);
 3bc:	80 2f       	mov	r24, r16
 3be:	9f d0       	rcall	.+318    	; 0x4fe <nokia_lcd_write_char>
 3c0:	6d e8       	ldi	r22, 0x8D	; 141
			unsigned char test = 141;
			strcpy(intro, test);
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	ce 01       	movw	r24, r28
 3c6:	01 96       	adiw	r24, 0x01	; 1
 3c8:	79 d1       	rcall	.+754    	; 0x6bc <strcpy>
			nokia_lcd_write_string(intro,1);
 3ca:	61 e0       	ldi	r22, 0x01	; 1
 3cc:	ce 01       	movw	r24, r28
 3ce:	01 96       	adiw	r24, 0x01	; 1
 3d0:	40 d1       	rcall	.+640    	; 0x652 <nokia_lcd_write_string>
 3d2:	51 d1       	rcall	.+674    	; 0x676 <nokia_lcd_render>
			nokia_lcd_render();
 3d4:	01 2f       	mov	r16, r17
 3d6:	ec cf       	rjmp	.-40     	; 0x3b0 <main+0x3e>

000003d8 <write>:
	nokia_lcd_render();
	unsigned char key = '\0';
	unsigned char tmp = '\0';
    while (1) 
    {
		tmp = GetKeypadKey();
 3d8:	59 98       	cbi	0x0b, 1	; 11
 3da:	66 23       	and	r22, r22
}

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
	nokia_lcd.cursor_y = y;
 3dc:	11 f0       	breq	.+4      	; 0x3e2 <write+0xa>
 3de:	5b 9a       	sbi	0x0b, 3	; 11
 3e0:	15 c0       	rjmp	.+42     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3e2:	5b 98       	cbi	0x0b, 3	; 11
 3e4:	13 c0       	rjmp	.+38     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3e6:	ac 01       	movw	r20, r24
 3e8:	02 2e       	mov	r0, r18
 3ea:	02 c0       	rjmp	.+4      	; 0x3f0 <write+0x18>
 3ec:	55 95       	asr	r21
 3ee:	47 95       	ror	r20
 3f0:	0a 94       	dec	r0
 3f2:	e2 f7       	brpl	.-8      	; 0x3ec <write+0x14>
 3f4:	40 ff       	sbrs	r20, 0
 3f6:	02 c0       	rjmp	.+4      	; 0x3fc <write+0x24>
 3f8:	5c 9a       	sbi	0x0b, 4	; 11
 3fa:	01 c0       	rjmp	.+2      	; 0x3fe <write+0x26>
 3fc:	5c 98       	cbi	0x0b, 4	; 11
 3fe:	5d 9a       	sbi	0x0b, 5	; 11
 400:	5d 98       	cbi	0x0b, 5	; 11
 402:	21 50       	subi	r18, 0x01	; 1
 404:	31 09       	sbc	r19, r1
 406:	78 f7       	brcc	.-34     	; 0x3e6 <write+0xe>
 408:	59 9a       	sbi	0x0b, 1	; 11
 40a:	08 95       	ret
 40c:	27 e0       	ldi	r18, 0x07	; 7
 40e:	30 e0       	ldi	r19, 0x00	; 0
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	e9 cf       	rjmp	.-46     	; 0x3e6 <write+0xe>

00000414 <write_cmd>:
 414:	60 e0       	ldi	r22, 0x00	; 0
 416:	e0 cf       	rjmp	.-64     	; 0x3d8 <write>
 418:	08 95       	ret

0000041a <nokia_lcd_init>:
 41a:	cf 93       	push	r28
 41c:	df 93       	push	r29
 41e:	51 9a       	sbi	0x0a, 1	; 10
 420:	52 9a       	sbi	0x0a, 2	; 10
 422:	53 9a       	sbi	0x0a, 3	; 10
 424:	54 9a       	sbi	0x0a, 4	; 10
 426:	55 9a       	sbi	0x0a, 5	; 10
 428:	5a 9a       	sbi	0x0b, 2	; 11
 42a:	59 9a       	sbi	0x0b, 1	; 11
 42c:	83 ec       	ldi	r24, 0xC3	; 195
 42e:	99 e0       	ldi	r25, 0x09	; 9
 430:	01 97       	sbiw	r24, 0x01	; 1
 432:	f1 f7       	brne	.-4      	; 0x430 <nokia_lcd_init+0x16>
 434:	00 c0       	rjmp	.+0      	; 0x436 <nokia_lcd_init+0x1c>
 436:	00 00       	nop
 438:	5a 98       	cbi	0x0b, 2	; 11
 43a:	8b e5       	ldi	r24, 0x5B	; 91
 43c:	94 e4       	ldi	r25, 0x44	; 68
 43e:	01 97       	sbiw	r24, 0x01	; 1
 440:	f1 f7       	brne	.-4      	; 0x43e <nokia_lcd_init+0x24>
 442:	00 c0       	rjmp	.+0      	; 0x444 <nokia_lcd_init+0x2a>
 444:	00 00       	nop
 446:	5a 9a       	sbi	0x0b, 2	; 11
 448:	59 98       	cbi	0x0b, 1	; 11
 44a:	81 e2       	ldi	r24, 0x21	; 33
 44c:	e3 df       	rcall	.-58     	; 0x414 <write_cmd>
 44e:	83 e1       	ldi	r24, 0x13	; 19
 450:	e1 df       	rcall	.-62     	; 0x414 <write_cmd>
 452:	86 e0       	ldi	r24, 0x06	; 6
 454:	df df       	rcall	.-66     	; 0x414 <write_cmd>
 456:	82 ec       	ldi	r24, 0xC2	; 194
 458:	dd df       	rcall	.-70     	; 0x414 <write_cmd>
 45a:	80 e2       	ldi	r24, 0x20	; 32
 45c:	db df       	rcall	.-74     	; 0x414 <write_cmd>
 45e:	89 e0       	ldi	r24, 0x09	; 9
 460:	d9 df       	rcall	.-78     	; 0x414 <write_cmd>
 462:	80 e8       	ldi	r24, 0x80	; 128
 464:	d7 df       	rcall	.-82     	; 0x414 <write_cmd>
 466:	80 e4       	ldi	r24, 0x40	; 64
 468:	d5 df       	rcall	.-86     	; 0x414 <write_cmd>
 46a:	c8 ef       	ldi	r28, 0xF8	; 248
 46c:	d1 e0       	ldi	r29, 0x01	; 1
 46e:	61 e0       	ldi	r22, 0x01	; 1
 470:	80 e0       	ldi	r24, 0x00	; 0
 472:	b2 df       	rcall	.-156    	; 0x3d8 <write>
 474:	21 97       	sbiw	r28, 0x01	; 1
 476:	d9 f7       	brne	.-10     	; 0x46e <nokia_lcd_init+0x54>
 478:	88 e0       	ldi	r24, 0x08	; 8
 47a:	cc df       	rcall	.-104    	; 0x414 <write_cmd>
 47c:	8c e0       	ldi	r24, 0x0C	; 12
 47e:	ca df       	rcall	.-108    	; 0x414 <write_cmd>
 480:	df 91       	pop	r29
 482:	cf 91       	pop	r28
 484:	08 95       	ret

00000486 <nokia_lcd_clear>:
 486:	80 e8       	ldi	r24, 0x80	; 128
 488:	c5 df       	rcall	.-118    	; 0x414 <write_cmd>
 48a:	80 e4       	ldi	r24, 0x40	; 64
 48c:	c3 df       	rcall	.-122    	; 0x414 <write_cmd>
 48e:	10 92 fe 02 	sts	0x02FE, r1	; 0x8002fe <__data_end+0x1f8>
 492:	10 92 ff 02 	sts	0x02FF, r1	; 0x8002ff <__data_end+0x1f9>
 496:	e6 e0       	ldi	r30, 0x06	; 6
 498:	f1 e0       	ldi	r31, 0x01	; 1
 49a:	8e ef       	ldi	r24, 0xFE	; 254
 49c:	92 e0       	ldi	r25, 0x02	; 2
 49e:	11 92       	st	Z+, r1
 4a0:	e8 17       	cp	r30, r24
 4a2:	f9 07       	cpc	r31, r25
 4a4:	e1 f7       	brne	.-8      	; 0x49e <nokia_lcd_clear+0x18>
 4a6:	08 95       	ret

000004a8 <nokia_lcd_set_pixel>:
 4a8:	26 2f       	mov	r18, r22
 4aa:	26 95       	lsr	r18
 4ac:	26 95       	lsr	r18
 4ae:	26 95       	lsr	r18
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	34 e5       	ldi	r19, 0x54	; 84
 4b4:	23 9f       	mul	r18, r19
 4b6:	80 0d       	add	r24, r0
 4b8:	91 1d       	adc	r25, r1
 4ba:	11 24       	eor	r1, r1
 4bc:	44 23       	and	r20, r20
 4be:	79 f0       	breq	.+30     	; 0x4de <nokia_lcd_set_pixel+0x36>
 4c0:	fc 01       	movw	r30, r24
 4c2:	ea 5f       	subi	r30, 0xFA	; 250
 4c4:	fe 4f       	sbci	r31, 0xFE	; 254
 4c6:	67 70       	andi	r22, 0x07	; 7
 4c8:	81 e0       	ldi	r24, 0x01	; 1
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	02 c0       	rjmp	.+4      	; 0x4d2 <nokia_lcd_set_pixel+0x2a>
 4ce:	88 0f       	add	r24, r24
 4d0:	99 1f       	adc	r25, r25
 4d2:	6a 95       	dec	r22
 4d4:	e2 f7       	brpl	.-8      	; 0x4ce <nokia_lcd_set_pixel+0x26>
 4d6:	90 81       	ld	r25, Z
 4d8:	89 2b       	or	r24, r25
 4da:	80 83       	st	Z, r24
 4dc:	08 95       	ret
 4de:	fc 01       	movw	r30, r24
 4e0:	ea 5f       	subi	r30, 0xFA	; 250
 4e2:	fe 4f       	sbci	r31, 0xFE	; 254
 4e4:	67 70       	andi	r22, 0x07	; 7
 4e6:	81 e0       	ldi	r24, 0x01	; 1
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	02 c0       	rjmp	.+4      	; 0x4f0 <nokia_lcd_set_pixel+0x48>
 4ec:	88 0f       	add	r24, r24
 4ee:	99 1f       	adc	r25, r25
 4f0:	6a 95       	dec	r22
 4f2:	e2 f7       	brpl	.-8      	; 0x4ec <nokia_lcd_set_pixel+0x44>
 4f4:	80 95       	com	r24
 4f6:	90 81       	ld	r25, Z
 4f8:	89 23       	and	r24, r25
 4fa:	80 83       	st	Z, r24
 4fc:	08 95       	ret

000004fe <nokia_lcd_write_char>:
 4fe:	5f 92       	push	r5
 500:	6f 92       	push	r6
 502:	7f 92       	push	r7
 504:	8f 92       	push	r8
 506:	9f 92       	push	r9
 508:	af 92       	push	r10
 50a:	bf 92       	push	r11
 50c:	cf 92       	push	r12
 50e:	df 92       	push	r13
 510:	ef 92       	push	r14
 512:	ff 92       	push	r15
 514:	0f 93       	push	r16
 516:	1f 93       	push	r17
 518:	cf 93       	push	r28
 51a:	df 93       	push	r29
 51c:	56 2e       	mov	r5, r22
 51e:	26 2f       	mov	r18, r22
 520:	30 e0       	ldi	r19, 0x00	; 0
 522:	49 01       	movw	r8, r18
 524:	88 0c       	add	r8, r8
 526:	99 1c       	adc	r9, r9
 528:	88 0c       	add	r8, r8
 52a:	99 1c       	adc	r9, r9
 52c:	82 0e       	add	r8, r18
 52e:	93 1e       	adc	r9, r19
 530:	18 14       	cp	r1, r8
 532:	19 04       	cpc	r1, r9
 534:	0c f0       	brlt	.+2      	; 0x538 <nokia_lcd_write_char+0x3a>
 536:	59 c0       	rjmp	.+178    	; 0x5ea <nokia_lcd_write_char+0xec>
 538:	89 01       	movw	r16, r18
 53a:	00 0f       	add	r16, r16
 53c:	11 1f       	adc	r17, r17
 53e:	00 0f       	add	r16, r16
 540:	11 1f       	adc	r17, r17
 542:	00 0f       	add	r16, r16
 544:	11 1f       	adc	r17, r17
 546:	02 1b       	sub	r16, r18
 548:	13 0b       	sbc	r17, r19
 54a:	61 2c       	mov	r6, r1
 54c:	a8 2e       	mov	r10, r24
 54e:	b1 2c       	mov	r11, r1
 550:	c5 01       	movw	r24, r10
 552:	80 97       	sbiw	r24, 0x20	; 32
 554:	5c 01       	movw	r10, r24
 556:	aa 0c       	add	r10, r10
 558:	bb 1c       	adc	r11, r11
 55a:	aa 0c       	add	r10, r10
 55c:	bb 1c       	adc	r11, r11
 55e:	a8 0e       	add	r10, r24
 560:	b9 1e       	adc	r11, r25
 562:	0f 2e       	mov	r0, r31
 564:	ff ef       	ldi	r31, 0xFF	; 255
 566:	cf 2e       	mov	r12, r31
 568:	f2 e0       	ldi	r31, 0x02	; 2
 56a:	df 2e       	mov	r13, r31
 56c:	f0 2d       	mov	r31, r0
 56e:	0f 2e       	mov	r0, r31
 570:	fe ef       	ldi	r31, 0xFE	; 254
 572:	ef 2e       	mov	r14, r31
 574:	f2 e0       	ldi	r31, 0x02	; 2
 576:	ff 2e       	mov	r15, r31
 578:	f0 2d       	mov	r31, r0
 57a:	2a c0       	rjmp	.+84     	; 0x5d0 <nokia_lcd_write_char+0xd2>
 57c:	fe 01       	movw	r30, r28
 57e:	24 91       	lpm	r18, Z
 580:	30 e0       	ldi	r19, 0x00	; 0
 582:	87 2d       	mov	r24, r7
 584:	65 2d       	mov	r22, r5
 586:	8e d0       	rcall	.+284    	; 0x6a4 <__udivmodqi4>
 588:	02 c0       	rjmp	.+4      	; 0x58e <nokia_lcd_write_char+0x90>
 58a:	35 95       	asr	r19
 58c:	27 95       	ror	r18
 58e:	8a 95       	dec	r24
 590:	e2 f7       	brpl	.-8      	; 0x58a <nokia_lcd_write_char+0x8c>
 592:	20 ff       	sbrs	r18, 0
 594:	09 c0       	rjmp	.+18     	; 0x5a8 <nokia_lcd_write_char+0xaa>
 596:	f6 01       	movw	r30, r12
 598:	60 81       	ld	r22, Z
 59a:	67 0d       	add	r22, r7
 59c:	f7 01       	movw	r30, r14
 59e:	80 81       	ld	r24, Z
 5a0:	41 e0       	ldi	r20, 0x01	; 1
 5a2:	86 0d       	add	r24, r6
 5a4:	81 df       	rcall	.-254    	; 0x4a8 <nokia_lcd_set_pixel>
 5a6:	08 c0       	rjmp	.+16     	; 0x5b8 <nokia_lcd_write_char+0xba>
 5a8:	f6 01       	movw	r30, r12
 5aa:	60 81       	ld	r22, Z
 5ac:	67 0d       	add	r22, r7
 5ae:	f7 01       	movw	r30, r14
 5b0:	80 81       	ld	r24, Z
 5b2:	40 e0       	ldi	r20, 0x00	; 0
 5b4:	86 0d       	add	r24, r6
 5b6:	78 df       	rcall	.-272    	; 0x4a8 <nokia_lcd_set_pixel>
 5b8:	73 94       	inc	r7
 5ba:	87 2d       	mov	r24, r7
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	80 17       	cp	r24, r16
 5c0:	91 07       	cpc	r25, r17
 5c2:	e4 f2       	brlt	.-72     	; 0x57c <nokia_lcd_write_char+0x7e>
 5c4:	63 94       	inc	r6
 5c6:	86 2d       	mov	r24, r6
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	88 15       	cp	r24, r8
 5cc:	99 05       	cpc	r25, r9
 5ce:	6c f4       	brge	.+26     	; 0x5ea <nokia_lcd_write_char+0xec>
 5d0:	10 16       	cp	r1, r16
 5d2:	11 06       	cpc	r1, r17
 5d4:	bc f7       	brge	.-18     	; 0x5c4 <nokia_lcd_write_char+0xc6>
 5d6:	86 2d       	mov	r24, r6
 5d8:	65 2d       	mov	r22, r5
 5da:	64 d0       	rcall	.+200    	; 0x6a4 <__udivmodqi4>
 5dc:	e5 01       	movw	r28, r10
 5de:	c8 0f       	add	r28, r24
 5e0:	d1 1d       	adc	r29, r1
 5e2:	c4 57       	subi	r28, 0x74	; 116
 5e4:	df 4f       	sbci	r29, 0xFF	; 255
 5e6:	71 2c       	mov	r7, r1
 5e8:	c9 cf       	rjmp	.-110    	; 0x57c <nokia_lcd_write_char+0x7e>
 5ea:	80 91 fe 02 	lds	r24, 0x02FE	; 0x8002fe <__data_end+0x1f8>
 5ee:	91 e0       	ldi	r25, 0x01	; 1
 5f0:	98 0f       	add	r25, r24
 5f2:	85 2d       	mov	r24, r5
 5f4:	88 0f       	add	r24, r24
 5f6:	88 0f       	add	r24, r24
 5f8:	85 0d       	add	r24, r5
 5fa:	89 0f       	add	r24, r25
 5fc:	84 35       	cpi	r24, 0x54	; 84
 5fe:	18 f4       	brcc	.+6      	; 0x606 <nokia_lcd_write_char+0x108>
 600:	80 93 fe 02 	sts	0x02FE, r24	; 0x8002fe <__data_end+0x1f8>
 604:	0e c0       	rjmp	.+28     	; 0x622 <nokia_lcd_write_char+0x124>
 606:	10 92 fe 02 	sts	0x02FE, r1	; 0x8002fe <__data_end+0x1f8>
 60a:	ef ef       	ldi	r30, 0xFF	; 255
 60c:	f2 e0       	ldi	r31, 0x02	; 2
 60e:	80 81       	ld	r24, Z
 610:	91 e0       	ldi	r25, 0x01	; 1
 612:	98 0f       	add	r25, r24
 614:	85 2d       	mov	r24, r5
 616:	88 0f       	add	r24, r24
 618:	88 0f       	add	r24, r24
 61a:	88 0f       	add	r24, r24
 61c:	85 19       	sub	r24, r5
 61e:	89 0f       	add	r24, r25
 620:	80 83       	st	Z, r24
 622:	80 91 ff 02 	lds	r24, 0x02FF	; 0x8002ff <__data_end+0x1f9>
 626:	80 33       	cpi	r24, 0x30	; 48
 628:	20 f0       	brcs	.+8      	; 0x632 <nokia_lcd_write_char+0x134>
 62a:	10 92 fe 02 	sts	0x02FE, r1	; 0x8002fe <__data_end+0x1f8>
 62e:	10 92 ff 02 	sts	0x02FF, r1	; 0x8002ff <__data_end+0x1f9>
 632:	df 91       	pop	r29
 634:	cf 91       	pop	r28
 636:	1f 91       	pop	r17
 638:	0f 91       	pop	r16
 63a:	ff 90       	pop	r15
 63c:	ef 90       	pop	r14
 63e:	df 90       	pop	r13
 640:	cf 90       	pop	r12
 642:	bf 90       	pop	r11
 644:	af 90       	pop	r10
 646:	9f 90       	pop	r9
 648:	8f 90       	pop	r8
 64a:	7f 90       	pop	r7
 64c:	6f 90       	pop	r6
 64e:	5f 90       	pop	r5
 650:	08 95       	ret

00000652 <nokia_lcd_write_string>:
 652:	1f 93       	push	r17
 654:	cf 93       	push	r28
 656:	df 93       	push	r29
 658:	ec 01       	movw	r28, r24
 65a:	88 81       	ld	r24, Y
 65c:	88 23       	and	r24, r24
 65e:	39 f0       	breq	.+14     	; 0x66e <nokia_lcd_write_string+0x1c>
 660:	16 2f       	mov	r17, r22
 662:	21 96       	adiw	r28, 0x01	; 1
 664:	61 2f       	mov	r22, r17
 666:	4b df       	rcall	.-362    	; 0x4fe <nokia_lcd_write_char>
 668:	89 91       	ld	r24, Y+
 66a:	81 11       	cpse	r24, r1
 66c:	fb cf       	rjmp	.-10     	; 0x664 <nokia_lcd_write_string+0x12>
 66e:	df 91       	pop	r29
 670:	cf 91       	pop	r28
 672:	1f 91       	pop	r17
 674:	08 95       	ret

00000676 <nokia_lcd_render>:
}

void nokia_lcd_render(void)
{
 676:	0f 93       	push	r16
 678:	1f 93       	push	r17
 67a:	cf 93       	push	r28
 67c:	df 93       	push	r29
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
 67e:	80 e8       	ldi	r24, 0x80	; 128
 680:	c9 de       	rcall	.-622    	; 0x414 <write_cmd>
	write_cmd(0x40);
 682:	80 e4       	ldi	r24, 0x40	; 64
 684:	c7 de       	rcall	.-626    	; 0x414 <write_cmd>
 686:	c6 e0       	ldi	r28, 0x06	; 6
 688:	d1 e0       	ldi	r29, 0x01	; 1
 68a:	0e ef       	ldi	r16, 0xFE	; 254
 68c:	12 e0       	ldi	r17, 0x02	; 2
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
 68e:	61 e0       	ldi	r22, 0x01	; 1
 690:	89 91       	ld	r24, Y+
 692:	a2 de       	rcall	.-700    	; 0x3d8 <write>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
 694:	c0 17       	cp	r28, r16
 696:	d1 07       	cpc	r29, r17
 698:	d1 f7       	brne	.-12     	; 0x68e <nokia_lcd_render+0x18>
		write_data(nokia_lcd.screen[i]);
}
 69a:	df 91       	pop	r29
 69c:	cf 91       	pop	r28
 69e:	1f 91       	pop	r17
 6a0:	0f 91       	pop	r16
 6a2:	08 95       	ret

000006a4 <__udivmodqi4>:
 6a4:	99 1b       	sub	r25, r25
 6a6:	79 e0       	ldi	r23, 0x09	; 9
 6a8:	04 c0       	rjmp	.+8      	; 0x6b2 <__udivmodqi4_ep>

000006aa <__udivmodqi4_loop>:
 6aa:	99 1f       	adc	r25, r25
 6ac:	96 17       	cp	r25, r22
 6ae:	08 f0       	brcs	.+2      	; 0x6b2 <__udivmodqi4_ep>
 6b0:	96 1b       	sub	r25, r22

000006b2 <__udivmodqi4_ep>:
 6b2:	88 1f       	adc	r24, r24
 6b4:	7a 95       	dec	r23
 6b6:	c9 f7       	brne	.-14     	; 0x6aa <__udivmodqi4_loop>
 6b8:	80 95       	com	r24
 6ba:	08 95       	ret

000006bc <strcpy>:
 6bc:	fb 01       	movw	r30, r22
 6be:	dc 01       	movw	r26, r24
 6c0:	01 90       	ld	r0, Z+
 6c2:	0d 92       	st	X+, r0
 6c4:	00 20       	and	r0, r0
 6c6:	e1 f7       	brne	.-8      	; 0x6c0 <strcpy+0x4>
 6c8:	08 95       	ret

000006ca <_exit>:
 6ca:	f8 94       	cli

000006cc <__stop_program>:
 6cc:	ff cf       	rjmp	.-2      	; 0x6cc <__stop_program>
